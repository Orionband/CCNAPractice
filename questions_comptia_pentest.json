[
    {
        "questionId":  "CB29C128-4619-4624-9167-003F1BD2491D",
        "questionText":  "A pentester identifies that the organization has insufficient restrictions on privileged user accounts, allowing access at all hours. Which operational control would best address this issue?",
        "explanation":  "Time-of-day restrictions limit account usage to specific time periods, reducing the risk of unauthorized access during non-business hours (for example, restricting administrative access to weekdays from 9 AM to 6 PM). Job rotation minimizes insider threats by regularly rotating responsibilities (for example, changing access rights between employees). Role-based access control grants permissions based on user roles but does not enforce temporal restrictions. Biometric controls verify identity through physical characteristics but do not restrict access by time.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Job rotation",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Time-of-day restrictions",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Role-based access control",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Biometric controls",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "998298E9-7191-4632-8A55-2E13D29B5C43",
        "questionText":  "A pentester engaged by a government agency must incorporate all external mandates into the plan; which component ensures legal, regulatory, and technical guidelines are met?",
        "explanation":  "Scope Definition explicitly delineates which systems and networks are included in the engagement (for example, the pentester may define that only external servers will be tested). Privacy ensures that personal data is protected in accordance with relevant laws (for example, referencing GDPR). Exclusions specify what is off?limits (for example, excluding internal HR databases). Test Cases describe the specific technical scenarios that the pentester will execute (for example, simulating a SQL injection).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Scope Definition",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Privacy",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Exclusions",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Test Cases",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "E9897C9C-413C-4BB4-8AEE-2E394944D1CD",
        "questionText":  "A pentester observes that user accounts are vulnerable to brute-force attacks. Which remediation should the report recommend to mitigate this risk?",
        "explanation":  "Multifactor authentication strengthens account security by requiring additional verification factors beyond just a password (for example, a one-time code). Certificate management secures data transfer but does not directly mitigate brute-force risks. Process-level remediation addresses operational inefficiencies but does not enhance authentication security. Network segmentation improves infrastructure security but is unrelated to account brute-force protection.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Multifactor authentication",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Certificate management",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Process-level remediation",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Network segmentation",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "0032582D-25DC-48C6-9154-2F1398FE0E40",
        "questionText":  "A pentester identifies that shared credentials \u0026nbsp;are exposed in plaintext within application code. Which remediation would address this issue?",
        "explanation":  "Secrets management solution secures sensitive credentials by storing them in dedicated tools with strict access controls (for example, using a vault like HashiCorp Vault). Multifactor authentication secures user accounts but does not protect application secrets. Encryption secures data but is not specific to credential management. Key rotation reduces risk for cryptographic keys but does not address shared secret exposure.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Key rotation",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Multifactor authentication",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Encryption",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Secrets management solution",
                                  "IsCorrect":  true
                              }
                          ]
    },
    {
        "questionId":  "F79AAFB7-6587-4BE4-A6FD-300642F206C6",
        "questionText":  "A pentester notes that employees handling sensitive data do not understand the \u0026nbsp;requirements for their role, increasing the risk of human error. Which operational control would best address this issue?",
        "explanation":  "User training educates employees on identifying and mitigating security risks, such as phishing attempts and improper data handling (for example, teaching staff how to recognize a spear-phishing email). Time-of-day restrictions control access based on the time but do not address employee awareness. Role-based access control grants permissions based on roles but does not educate users. Job rotation reduces insider threats but is unrelated to security awareness.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "User training",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Time-of-day restrictions",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Role-based access control",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Job rotation",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "DD6953F7-09A8-4AEF-91DF-33E6195B501B",
        "questionText":  "A pentester documents the sequence of actions taken during a successful attack to help the organization understand how vulnerabilities were exploited. Which report component is this?",
        "explanation":  "Attack narrative describes the sequence of steps taken during the exploitation process, providing context on how vulnerabilities were used to achieve objectives (for example, exploiting a misconfigured server to access sensitive data). Detailed findings present specific technical details about each identified vulnerability (for example, affected systems and mitigation strategies). Test limitations and assumptions outline constraints and scope-related assumptions (for example, stating that internal testing was not conducted). Risk scoring prioritizes vulnerabilities based on their severity (for example, using CVSS metrics).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Attack narrative",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Detailed findings",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Test limitations and assumptions",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Risk scoring",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "CAEDF697-83CB-4537-9018-39F66F509760",
        "questionText":  "A pentester discovers that a database is vulnerable to SQL injection attacks. Which remediation would most effectively address this issue?",
        "explanation":  "Sanitize user input/parameterize queries prevents SQL injection attacks by ensuring that user inputs are validated and queries are properly structured (for example, using prepared statements). Network segmentation isolates critical systems but does not directly address query vulnerabilities. Patch management updates software to fix known vulnerabilities but is not specific to SQL injection. Certificate management ensures secure communication but is unrelated to database query security.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Patch management",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Network segmentation",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Sanitize user input/parameterize queries",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Certificate management",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "631E56F1-A768-41AE-96ED-408FF24D7A85",
        "questionText":  "A pentester discovers that expired SSL/TLS certificates are being used by an organization. Which remediation would most effectively resolve this issue?",
        "explanation":  "Certificate management ensures that SSL/TLS certificates are valid, regularly updated, and properly configured to secure communication channels (for example, renewing an expired certificate). Encryption secures data but relies on valid certificates for HTTPS communication. Patch management addresses software vulnerabilities but does not handle certificate renewal. Network segmentation isolates traffic but does not affect certificate validity.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Certificate management",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Encryption",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Patch management",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Network segmentation",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "123C3CC0-7D4D-461A-873C-49B124051856",
        "questionText":  "A pentester must document test results with in-depth technical details, including affected systems, CVSS scores, and remediation strategies. Which report component is this?",
        "explanation":  "Detailed findings include technical specifics about each vulnerability, such as affected systems, severity, and suggested mitigations (for example, documenting an open S3 bucket exposing sensitive data). Executive summary provides a high-level overview for stakeholders (for example, summarizing overall risks). Methodology explains the tools and techniques used during testing (for example, using Burp Suite for web application analysis). Recommendations provide actionable steps for remediation (for example, enabling encryption for data in transit).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Executive summary",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Detailed findings",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Methodology",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Recommendations",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "5661D8AF-E0F2-4534-A611-4F8C72358D29",
        "questionText":  "A pentester must clarify which business?critical systems will be not be a part of the testing engagement to prevent disruption; which rules of engagement element designates these off?limit assets?",
        "explanation":  "Scope Definition explicitly delineates which systems and networks are included in the engagement (for example, the pentester may define that only external servers will be tested). Privacy ensures that personal data is protected in accordance with relevant laws (for example, referencing GDPR). Exclusions specify what is off?limits (for example, excluding internal HR databases). Test Cases describe the specific technical scenarios that the pentester will execute (for example, simulating a SQL injection).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Scope Definition",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Privacy",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Exclusions",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Test Cases",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "2896EDB7-7A47-48F9-B36D-5D6E212259BA",
        "questionText":  "A pentester working for a healthcare organization reviews policies to ensure that data handling complies with legal standards; which pre?engagement activity is primarily aimed at protecting personal data?",
        "explanation":  "Privacy ensures that personal data is protected in accordance with relevant laws (for example, by referencing GDPR). Scope Definition explicitly delineates which systems, networks, and assets are included in the engagement (for example, the pentester may define that only external servers will be tested). Resource Requirements detail the technical and logistical prerequisites necessary for the test (for example, confirming that access permissions and hardware are available). Communication Protocol specifies the secure channels and methods for information exchange during the engagement (for example, using encrypted emails).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Privacy",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Scope Definition",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Resource Requirements",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Communication Protocol",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "9F5BE6C1-7D33-453A-8427-608F33474B51",
        "questionText":  "A pentester for a healthcare organization focuses on adhering to data protection requirements; which element ensures that personal data is handled lawfully?",
        "explanation":  "Scope Definition explicitly delineates which systems and networks are included in the engagement (for example, the pentester may define that only external servers will be tested). Privacy ensures that personal data is protected in accordance with relevant laws (for example, referencing GDPR). Exclusions specify what is off?limits (for example, excluding internal HR databases). Test Cases describe the specific technical scenarios that the pentester will execute (for example, simulating a SQL injection).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Scope Definition",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Privacy",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Exclusions",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Test Cases",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "5ABF49CE-AA90-49B0-86F2-75CF28B09B60",
        "questionText":  "A pentester finds that sensitive data is transmitted over the network in plaintext. Which remediation would secure the data during transit?",
        "explanation":  "Encryption secures data in transit by converting it into an unreadable format, preventing unauthorized access (for example, using TLS to encrypt communications). Network segmentation isolates network traffic but does not directly encrypt it. Key rotation ensures cryptographic keys remain secure but does not address plaintext data directly. System hardening reduces vulnerabilities by tightening system configurations but is unrelated to data transmission.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Network segmentation",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Key rotation",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Encryption",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "System hardening",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "F16745E7-7F84-46BB-80D8-7654827EA7A8",
        "questionText":  "A pentester finds that critical areas in a data center lack adequate monitoring, making them vulnerable to unauthorized physical access. Which physical control would enhance security in this scenario?",
        "explanation":  "Video surveillance monitors and records activities in critical areas, deterring unauthorized access and providing evidence of security breaches (for example, cameras capturing activity at data center entrances). Access control vestibules enforce secure entry but do not provide ongoing monitoring. Biometric controls authenticate individuals based on unique physical traits (for example, fingerprint or iris scans). Policies and procedures establish guidelines but do not involve physical monitoring.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Video surveillance",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Access control vestibule",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Biometric controls",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Policies and procedures",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "156B84A5-E7D1-4F1F-A479-8396076D92EF",
        "questionText":  "A pentester needs to outline the specific steps and tools used during the engagement. Which report component captures this information?",
        "explanation":  "Methodology describes the tools, techniques, and processes employed during the penetration test, providing a clear understanding of how the assessment was conducted (for example, listing tools like Nmap or Burp Suite). Risk scoring assigns numerical values to vulnerabilities based on their impact and likelihood (for example, CVSS scores). Executive summary provides a non-technical overview for stakeholders (for example, summarizing the key vulnerabilities). Test limitations and assumptions describe constraints and testing boundaries (for example, stating that only external systems were in scope).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Methodology",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Risk scoring",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Executive summary",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Test limitations and assumptions",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "30EE6729-67CE-4BF9-9C0E-90A0EA7E3CF1",
        "questionText":  "A pentester needs to explain technical terms used throughout the report to ensure clarity for non-technical stakeholders. Which report component achieves this?",
        "explanation":  "Definitions clarify technical terms and acronyms used in the report, making it accessible to non-technical readers (for example, defining \u0026quot;RCE\u0026quot; as Remote Code Execution). Executive summary provides a high-level overview for stakeholders (for example, summarizing the overall risk level). Methodology outlines the tools and techniques used during the test (for example, detailing vulnerability scanning steps). Recommendations offer actionable steps to address identified vulnerabilities (for example, implementing patch management).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Recommendations",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Executive summary",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Methodology",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Definitions",
                                  "IsCorrect":  true
                              }
                          ]
    },
    {
        "questionId":  "ED1701C1-C784-4D09-BBD1-9B2D79B0A201",
        "questionText":  "A pentester provides specific remediation steps to address identified vulnerabilities in the report. Which component includes this information?",
        "explanation":  "Recommendations offer actionable guidance to address vulnerabilities, such as patching outdated software or implementing multifactor authentication (for example, suggesting parameterized queries to prevent SQL injection). Attack narrative outlines the steps taken during exploitation (for example, leveraging an insecure API to gain access). Risk scoring assigns numerical values to prioritize issues (for example, using CVSS metrics). Definitions clarify technical terms for readability (for example, defining \u0026quot;cross-site scripting\u0026quot;).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Recommendations",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Attack narrative",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Risk scoring",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Definitions",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "301232C6-FBAC-4447-A385-9E0386E3AC47",
        "questionText":  "A pentester notes that the testing was limited to external systems only due to client restrictions. Which report component should include this detail?",
        "explanation":  "Test limitations and assumptions outline any restrictions or scope boundaries that impacted the testing process (for example, limiting the test to external systems). Methodology details the techniques and tools used during the test (for example, employing vulnerability scanners). Documentation specifications ensure the report adheres to agreed formatting standards (for example, using specific fonts and styles). Executive summary provides a high-level overview of the test (for example, summarizing key vulnerabilities).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Executive summary",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Methodology",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Documentation specifications",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Test limitations and assumptions",
                                  "IsCorrect":  true
                              }
                          ]
    },
    {
        "questionId":  "F2F5330A-CB71-4CFB-8E82-9EAD552AA2EC",
        "questionText":  "A pentester observes that employees frequently reuse passwords across systems, increasing the risk of credential compromise. Which administrative control would mitigate this issue?",
        "explanation":  "Minimum password requirements enforce strong password policies, such as complexity and length, reducing the likelihood of credential compromise (for example, requiring passwords with at least 12 characters, including symbols and numbers). User training educates employees on security best practices (for example, avoiding phishing attacks). Role-based access control assigns permissions based on job roles but does not address password security directly. Mandatory vacations detect insider threats by requiring employees to step away from their regular duties but are unrelated to password security.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Minimum password requirements",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "User training",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Role-based access control",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Mandatory vacations",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "3295AA1C-83FA-4FB4-916A-A0481B612367",
        "questionText":  "A pentester avoids interfering with peak retail hours by scheduling tests overnight; which element specifies the approved testing timeframe?",
        "explanation":  "Scope Definition explicitly delineates which systems and networks are included in the engagement (for example, the pentester may define that only external servers will be tested). Privacy ensures that personal data is protected in accordance with relevant laws (for example, referencing GDPR). Exclusions specify what is off?limits (for example, excluding internal HR databases). Test Cases describe the specific technical scenarios that the pentester will execute (for example, simulating a SQL injection).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Scope Definition",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Privacy",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Exclusions",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Test Cases",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "BAA76A43-68EA-4C07-9484-A88519CC0590",
        "questionText":  "A pentester assigned to a bank must ensure that sensitive information is kept confidential throughout the engagement; which contractual document enforces this requirement?",
        "explanation":  "A Non-disclosure Agreement (NDA) ensures confidentiality by legally binding all parties to protect sensitive information shared during the engagement. A Master Service Agreement (MSA) outlines general terms and conditions for services but does not focus specifically on confidentiality. A Statement of Work (SoW) details the scope, deliverables, and objectives of the engagement but does not enforce confidentiality. A Service Level Agreement (SLA) defines performance and service expectations but does not address the protection of sensitive information.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Non-disclosure Agreement (NDA)",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Master Service Agreement (MSA)",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Statement of Work (SoW)",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Service Level Agreement (SLA)",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "078C8760-B2F4-4C6F-ABAE-AD78FD6AD8C0",
        "questionText":  "A pentester determines that the organization lacks sufficient isolation between critical systems. Which remediation would address this vulnerability?",
        "explanation":  "Network segmentation isolates critical systems from less secure network zones, reducing the risk of lateral movement during attacks (for example, separating servers handling payment data). System hardening improves individual system defenses but does not isolate network zones. Encryption secures data but does not control network architecture. Key rotation ensures secure key usage but is unrelated to network design.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "System hardening",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Network segmentation",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Encryption",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Key rotation",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "CC0222D2-0643-499C-AC49-AE0F8A3BE45B",
        "questionText":  "A pentester is tasked with creating a document that provides an overview of the test\u0026#39;s goals and high-level results for stakeholders. Which report component fulfills this requirement?",
        "explanation":  "Executive summary provides a high-level overview of the penetration test\u0026#39;s objectives, methodologies, and outcomes, tailored for stakeholders who may not have technical expertise (for example, summarizing the overall security posture of the organization). Methodology explains the specific techniques and processes used during the test (for example, outlining vulnerability scanning steps). Attack narrative details the sequence of actions taken during exploitation (for example, how a vulnerability was leveraged to access sensitive data). Detailed findings present in-depth technical information on identified vulnerabilities (for example, including CVSS scores and affected systems).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Executive summary",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Methodology",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Attack narrative",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Detailed findings",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "D218A636-BE68-4F01-B785-BFB7AE20B333",
        "questionText":  "A pentester reviews an industry-standard framework that provides a methodology for evaluating web application vulnerabilities, focusing on critical risks. Which framework would be most appropriate?",
        "explanation":  "OWASP Top 10 provides a globally recognized list of the most critical web application security risks, offering guidance for mitigating vulnerabilities (for example, addressing injection or insecure deserialization). Purdue model focuses on network segmentation within industrial control systems (for example, defining levels for ICS communications). CREST certifies organizations and individuals for ethical security testing but is not a vulnerability list. MITRE ATT\u0026amp;CK maps adversary tactics and techniques but does not prioritize web-specific risks.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "CREST",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Purdue model",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "OWASP Top 10",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "MITRE ATT\u0026amp;CK",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "00D5549E-F259-4217-9C2E-CDA546BA66DC",
        "questionText":  "A pentester creates a report structured to comply with client requirements regarding formatting, font size, and layout. Which component does this pertain to?",
        "explanation":  "Documentation specifications ensure the report adheres to predefined client requirements, such as formatting, font size, and layout (for example, adhering to ISO reporting standards). Format alignment ensures consistency in organizing the report (for example, maintaining uniform headings). Test limitations and assumptions outline constraints and scope-related assumptions (for example, stating internal systems were not tested). Methodology details the steps and tools used during the test (for example, employing vulnerability scanners).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Documentation specifications",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Format alignment",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Test limitations and assumptions",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Methodology",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "EB0F63B3-8456-43A4-A7D7-CE98C64A5B85",
        "questionText":  "A pentester is engaged by a financial institution and must specify precisely which systems will be tested during the engagement; which pre?engagement activity accomplishes this?",
        "explanation":  "Scope Definition explicitly delineates which systems and networks are included in the engagement (for example, the pentester may define that only external servers will be tested). Privacy ensures that personal data is protected in accordance with relevant laws (for example, referencing GDPR). Exclusions specify what is off?limits (for example, excluding internal HR databases). Test Cases describe the specific technical scenarios that the pentester will execute (for example, simulating a SQL injection).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Scope Definition",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Privacy",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Exclusions",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Test Cases",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "1E32D922-76A1-4AF7-98DE-D2F084971C2A",
        "questionText":  "A pentester is engaged by a financial institution and must specify precisely which systems and networks will be targeted during the engagement; which pre?engagement activity accomplishes this?",
        "explanation":  "Scope Definition explicitly delineates which systems, networks, and assets are included in the engagement (for example, the pentester may define that only external servers will be tested). Privacy ensures that personal data is protected in accordance with relevant laws (for example, by referencing GDPR). Exclusions specify what is off?limits and clearly list the systems not to be tested (for example, internal HR databases might be excluded). Test Cases describe the specific technical scenarios that the pentester will execute (for example, simulating a SQL injection).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Scope Definition",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Privacy",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Exclusions",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Test Cases",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "B4D6B4B6-8596-4FD9-8E02-D5F8100FE0B7",
        "questionText":  "A pentester ensures that all sections of the report are consistent and follow a logical structure. Which component achieves this?",
        "explanation":  "Format alignment ensures consistency across the report by maintaining logical organization and uniform formatting (for example, aligning headings and subheadings). Documentation specifications focus on adhering to predefined standards for formatting (for example, font and layout). Definitions clarify technical terms for better understanding (for example, explaining \u0026quot;SQL injection\u0026quot;). Test limitations and assumptions describe the constraints of the test (for example, noting only external systems were assessed).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Test limitations and assumptions",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Documentation specifications",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Definitions",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Format alignment",
                                  "IsCorrect":  true
                              }
                          ]
    },
    {
        "questionId":  "7B8739C4-D6C7-492B-952F-E5527AEECCC6",
        "questionText":  "A pentester reports that an organization\u0026rsquo;s outdated operating system increases its exposure to known vulnerabilities. Which remediation would best reduce this risk?",
        "explanation":  "Patch management addresses vulnerabilities in outdated operating systems by applying the latest security updates (for example, updating to a patched version to resolve a zero-day exploit). Multifactor authentication improves account security but does not resolve OS vulnerabilities. Secrets management solution secures sensitive credentials but does not mitigate OS-level issues. Key rotation manages cryptographic keys but is unrelated to operating system updates.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Patch management",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Multifactor authentication",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Secrets management solution",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Key rotation",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "DD672611-4A15-433D-AC1C-DC55C49D38B7",
        "questionText":  "A pentester uses a framework that focuses on providing a standardized and structured approach for executing penetration tests and reporting findings. Which framework aligns with this description?",
        "explanation":  "Penetration Testing Execution Standard (PTES) provides a structured and standardized approach for conducting penetration tests and delivering actionable results (for example, defining pre-engagement, intelligence gathering, and exploitation phases). MITRE ATT\u0026amp;CK focuses on understanding adversary tactics and techniques (for example, mapping common attack vectors). OWASP Top 10 highlights the most critical web application security risks (for example, injection flaws or misconfigurations). Open Source Security Testing Methodology Manual (OSSTMM) emphasizes testing security through scientific methods (for example, analyzing attack surfaces in terms of operational security).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Open Source Security Testing Methodology Manual (OSSTMM)",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "MITRE ATT\u0026amp;CK",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "OWASP Top 10",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Penetration Testing Execution Standard (PTES)",
                                  "IsCorrect":  true
                              }
                          ]
    },
    {
        "questionId":  "D4DFD174-ABC7-4BA3-9D1C-EAEF4B14D598",
        "questionText":  "A pentester is engaged in testing an industrial control system (ICS) network and needs a model to structure security assessments across layered levels of automation. Which framework is most applicable?",
        "explanation":  "Purdue model provides a framework for structuring security in industrial control systems (ICS) by defining hierarchical levels from enterprise IT to process control systems (for example, Level 0 focuses on physical processes). OWASP Mobile Application Security Verification Standard (MASVS) addresses security for mobile applications (for example, testing for data storage vulnerabilities). Open Source Security Testing Methodology Manual (OSSTMM) provides a scientific approach to security testing but does not focus on ICS. CREST offers certifications and standards for ethical security testing, unrelated to ICS frameworks.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Purdue model",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "OWASP Mobile Application Security Verification Standard (MASVS)",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "OSSTMM",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "CREST",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "4EF2F4A2-D97C-4EB4-A664-F6B1BFF50A23",
        "questionText":  "A pentester has identified several vulnerabilities and must assign numerical values to prioritize remediation. Which report component includes this process?",
        "explanation":  "Risk scoring assigns numerical values to vulnerabilities based on impact and likelihood, aiding in prioritization for remediation (for example, assigning a CVSS score of 9.0 to a critical flaw). Documentation specifications outline the format and structure of the report (for example, ensuring consistent font and layout). Definitions clarify technical terms for better comprehension (for example, explaining \u0026quot;SQL injection\u0026quot;). Recommendations provide actionable guidance to address vulnerabilities (for example, advising to sanitize user input).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Documentation specifications",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Risk scoring",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Definitions",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Recommendations",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "33B51F6D-8998-4601-81F7-F1C920D1F496",
        "questionText":  "A pentester uses a tool to search public code repositories for hardcoded credentials in source code. Which tool is most appropriate?",
        "explanation":  "SpiderFoot automates OSINT gathering, including searching public code repositories for hardcoded credentials (for example, locating AWS keys in GitHub repositories). OSINTframework.com organizes tools and resources for OSINT tasks (for example, choosing the right tool for social media searches). Recon-ng is a modular OSINT framework for collecting various data types (for example, performing DNS lookups). Censys.io focuses on SSL/TLS certificates and internet-exposed devices (for example, finding s linked to a certificate).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "SpiderFoot",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "OSINTframework.com",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Recon-ng",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Censys.io",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "2CBCEC28-1BA6-41B1-89C1-F5F8A250ED02",
        "questionText":  "A pentester performs a network scan to identify vulnerabilities in SMB services and uses a tool capable of running scripts to enhance its detection capabilities. Which tool capability is being applied?",
        "explanation":  "Nmap Scripting Engine (NSE) extends Nmap\u0026#39;s functionality by detecting vulnerabilities in services like SMB with scripts such as smb-vuln-ms17-010 (for example, identifying EternalBlue exploitability). Recon-ng gathers OSINT data modularly (for example, extracting WHOIS information). theHarvester collects email addresses and subs (for example, scraping public sources for contact data). Shodan identifies internet-exposed devices (for example, locating unsecured IoT cameras).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Nmap Scripting Engine (NSE)",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Recon-ng",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "theHarvester",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Shodan",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "707C278A-A3B3-445B-9614-FD25960446AB",
        "questionText":  "A pentester uses a reconnaissance tool to query records and retrieve information about a \u0026rsquo;s ownership and registration details. Which tool is best suited for this task?",
        "explanation":  "WHOIS queries\u0026nbsp; registration records to identify ownership, contact information, and expiration dates (for example, verifying a \u0026rsquo;s registrar and registrant). DNSdumpster enumerates DNS records (for example, identifying subs). Recon-ng modularly gathers OSINT (for example, performing reverse DNS lookups). SpiderFoot automates broader OSINT tasks (for example, finding leaked credentials).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "WHOIS",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "DNSdumpster",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Recon-ng",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "SpiderFoot",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "E269449D-DB52-470D-B88E-FD513E181463",
        "questionText":  "A pentester uses a reconnaissance tool to collect email addresses, subs, and employee names from public sources. Which tool is the most suitable?",
        "explanation":  "theHarvester collects OSINT data like email addresses, subs, and employee names from public sources (for example, scraping LinkedIn for employee information). SpiderFoot performs automated OSINT gathering (for example, finding leaked credentials). DNSdumpster lists DNS records and subs (for example, identifying the DNS structure of a target). InSSIDer analyzes wireless networks (for example, detecting rogue access points).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "theHarvester",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "SpiderFoot",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "DNSdumpster",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "InSSIDer",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "E7C46C2A-DFFD-425C-9128-D986E66DAAD9",
        "questionText":  "A pentester leverages a tool to enumerate DNS records, including MX and TXT records, for a target . Which tool is the most appropriate?",
        "explanation":  "DNSdumpster specializes in DNS enumeration, identifying records like MX and TXT to provide a comprehensive view of a \u0026#39;s DNS setup (for example, uncovering SPF records). WHOIS retrieves\u0026nbsp; registration data (for example,\u0026nbsp; ownership details). SpiderFoot automates OSINT collection (for example, searching for credential leaks). Hunter.io focuses on finding email addresses (for example, scraping public sources for employee contacts).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "DNSdumpster",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "WHOIS",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "SpiderFoot",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Hunter.io",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "C5B1D9A7-11FD-4344-8D62-DA522A22CCCC",
        "questionText":  "A pentester gathers data from job boards to identify technologies and software versions used by a target organization. Which information gathering technique is this?",
        "explanation":  "Open-source intelligence (OSINT) involves using publicly available resources like job boards to gather information, such as listed software versions and roles (for example, a post mentioning AWS services). Network reconnaissance identifies active systems and services on a network (for example, mapping IP ranges). Protocol scanning determines open ports and services (for example, scanning for active UDP services). Information disclosure occurs when sensitive information is unintentionally revealed (for example, overly detailed error messages).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Open-source intelligence (OSINT)",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Network reconnaissance",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Protocol scanning",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Information disclosure",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "B9143CB8-452E-48B8-95CE-DF56DB70B0AA",
        "questionText":  "A pentester uses a framework to systematically organize reconnaissance tools and resources for an OSINT engagement. Which tool is most appropriate?",
        "explanation":  "OSINTframework.com organizes reconnaissance tools and resources, providing structured guidance for specific OSINT tasks (for example, selecting a tool for DNS enumeration). Maltego visualizes relationships between OSINT data (for example, linking email addresses to s). Wayback Machine retrieves archived website versions (for example, identifying outdated information). Censys.io identifies SSL/TLS certificates and related s (for example, finding subs associated with a certificate).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "OSINTframework.com",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Maltego",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Wayback Machine",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Censys.io",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "482C60D9-694C-4D68-9D0A-BE5EA8CA6514",
        "questionText":  "A pentester enhances a Bash script to evaluate whether all active connections are over secure protocols. Which logic construct is being used?",
        "explanation":  "Boolean operators evaluate multiple logical conditions, such as ensuring a protocol is secure and active using if [[ $protocol == \u0026quot;HTTPS\u0026quot; \u0026amp;\u0026amp; $status == \u0026quot;Active\u0026quot; ]]; then echo \u0026quot;Secure\u0026quot;; fi. Loops execute repetitive tasks (for conn in $(netstat -tuln)). Conditionals execute based on specific conditions (if [ $status -eq \u0026quot;Active\u0026quot; ]; then). Arithmetic operators calculate totals (total_connections=$((http_count + https_count))).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Loops (for conn in $(netstat -tuln); do echo $conn; done)",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Boolean operator (if [[ $protocol == \u0026quot;HTTPS\u0026quot; \u0026amp;\u0026amp; $status == \u0026quot;Active\u0026quot; ]]; then echo \u0026quot;Secure\u0026quot;; fi)",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Conditionals (if [ $status -eq \u0026quot;Active\u0026quot; ]; then echo \u0026quot;Connection active\u0026quot;; fi)",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Arithmetic operator (total_connections=$((http_count + https_count)))",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "94322BF7-C8CB-4724-944C-BF3270305B83",
        "questionText":  "A pentester uses a tool to identify Wi-Fi networks globally and geolocate their physical locations using network identifiers and MAC addresses. Which tool is most appropriate?",
        "explanation":  "WiGLE.net maps Wi-Fi networks globally and geolocates their physical locations using network identifiers called service set identifiers (SSIDs) and MAC addresses (for example, pinpointing the location of a corporate network). InSSIDer scans and visualizes Wi-Fi networks nearby (for example, identifying misconfigured access points). Censys.io identifies SSL/TLS certificates and associated s (for example, finding exposed certificates). Shodan scans the internet for exposed devices and services (for example, identifying open RDP servers).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "WiGLE.net",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "InSSIDer",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Censys.io",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Shodan",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "73AE31C9-9B26-47CC-A742-BC9D0C192F5F",
        "questionText":  "A pentester engages directly with a target by sending crafted packets to identify vulnerabilities. Which information gathering technique does this describe?",
        "explanation":  "Active reconnaissance involves directly interacting with the target to gather information, such as sending packets to identify open ports or vulnerabilities (for example, performing a SYN scan). Passive reconnaissance collects data without direct interaction (for example, monitoring social media). Network sniffing captures traffic for analysis (for example, analyzing HTTP packets). Search engine analysis/enumeration uses advanced queries to locate exposed information (for example, finding sensitive files with Google dorks).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Active reconnaissance",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Passive reconnaissance",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Network sniffing",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Search engine analysis/enumeration",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "0C17A05C-8849-461D-A9C4-BD1597BBC859",
        "questionText":  "A pentester uses a tool to analyze captured network traffic to identify credentials transmitted in clear text. Which tool is most appropriate for this task?",
        "explanation":  "Wireshark captures and analyzes network traffic to identify credentials transmitted in clear text (for example, capturing HTTP login data). tcpdump provides command-line packet capturing (for example, capturing traffic headers). Aircrack-ng tests wireless security (for example, cracking WEP keys). InSSIDer visualizes Wi-Fi networks (for example, detecting overlapping service set identifiers (SSIDs).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Wireshark",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "tcpdump",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Aircrack-ng",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "InSSIDer",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "18DA9A8F-BF7C-4931-93E9-B0F17C2756D9",
        "questionText":  "A pentester enhances a PowerShell script to calculate the total size of logs collected during reconnaissance. Which logic construct is being applied?",
        "explanation":  "Arithmetic operators perform mathematical operations, such as calculating total log size with $totalSize = $log1.Size + $log2.Size. Boolean operators evaluate logical expressions (if ($log1.Size -gt 0 -and $log2.Size -gt 0)). Loops repeat actions for multiple items (foreach ($log in $logs)). Conditionals execute actions based on conditions (if ($totalSize -gt 100MB)).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Arithmetic operator ($totalSize = $log1.Size + $log2.Size)",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Boolean operator (if ($log1.Size -gt 0 -and $log2.Size -gt 0) { Write-Output \u0026quot;Logs exist\u0026quot;; })",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Loops (foreach ($log in $logs) { Write-Output $log.Size })",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Conditionals (if ($totalSize -gt 100MB) { Compress-Archive $logs })",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "0C086751-EA22-4456-9E3F-B4786EE39125",
        "questionText":  "A pentester uses a Bash script to evaluate if a server\u0026#39;s response time exceeds 100ms and triggers an alert if true. Which logic construct is being utilized?",
        "explanation":  "Boolean operators evaluate multiple conditions, such as if [ $response_time -gt 100 ] \u0026amp;\u0026amp; [ $reachable -eq 1 ]; then echo \u0026quot;High latency\u0026quot;; fi. Loops process multiple items (for ip in $(cat servers.txt); do ping -c 1 $ip; done). Conditionals execute code based on a condition (if [ $ping_status -eq 0 ]; then echo \u0026quot;Ping successful\u0026quot;; fi). Arithmetic operators perform calculations (total_time=$((time1 + time2 + time3))).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Boolean operator (if [ $response_time -gt 100 ] \u0026amp;\u0026amp; [ $reachable -eq 1 ]; then echo \u0026quot;High latency\u0026quot;; fi)",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Loops (for ip in $(cat servers.txt); do ping -c 1 $ip; done)",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Conditionals (if [ $ping_status -eq 0 ]; then echo \u0026quot;Ping successful\u0026quot;; fi)",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Arithmetic operator (total_time=$((time1 + time2 + time3)))",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "92F48516-7722-4108-A0D7-B70E7F7720AE",
        "questionText":  "A pentester scans IoT devices exposed on the internet to find vulnerabilities. Which tool is best for this task?",
        "explanation":  "Shodan identifies devices exposed on the internet, such as IoT devices, by searching for open ports and services (for example, discovering unsecured webcams). Recon-ng is used for modular OSINT gathering (for example, performing\u0026nbsp; lookups). Wireshark analyzes network traffic (for example, inspecting packets for unencrypted data). Amass performs DNS enumeration (for example, identifying subs).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Recon-ng",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Shodan",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Wireshark",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Amass",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "44369716-2BB4-44EE-9500-A0FF25E89E92",
        "questionText":  "A pentester uses a nslookup to identify the IP addresses associated with a target . Which information gathering technique does this represent?",
        "explanation":  "DNS lookups using tools such as \u0026ldquo;nslookup\u0026rdquo; in Windows and \u0026ldquo;dig\u0026rdquo; in Linux systems, retrieve information about -to-IP mappings, helping identify the infrastructure of a target (for example, resolving \u0026quot;example.com\u0026quot; to an IP address). Protocol scanning identifies open ports and protocols (for example, scanning for active TCP services). Cached pages refer to archived versions of websites (for example, viewing a previous version of a site via Wayback Machine). Certificate transparency logs store information about SSL/TLS certificates (for example, identifying s associated with certificates).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Protocol scanning",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "DNS lookups",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Cached pages",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Certificate transparency logs",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "65B28BA5-766F-4329-8EEF-9B7DAF280DE9",
        "questionText":  "A pentester queries DNS records to discover subs and email server configurations for a target organization. Which tool is the most appropriate?",
        "explanation":  "nslookup and dig query DNS records, allowing pentesters to identify subs, mail server configurations, and other DNS information (for example, discovering the mail exchanger (MX) record for a ). Nmap scans open ports and services (for example, identifying active services on target hosts). OSINTframework.com is a directory of OSINT tools and resources (for example, selecting appropriate tools for an engagement). Hunter.io locates email addresses for a\u0026nbsp; (for example, identifying contact information for employees).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "nslookup/dig",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Nmap",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "OSINTframework.com",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Hunter.io",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "628240B0-1C3D-49A9-A719-984770D35B3D",
        "questionText":  "A pentester reviews an organization\u0026#39;s network activity to identify unauthorized information sharing between IoT devices. Which technique best describes this activity?",
        "explanation":  "Network sniffing captures and analyzes network traffic to identify unauthorized activity, such as IoT devices sharing sensitive data (for example, capturing MQTT packets). Search engine analysis/enumeration uses search engines to uncover information (for example, finding open directories). Cryptographic flaws examine weaknesses in encryption protocols (for example, insecure SSL/TLS settings). Information disclosure happens when sensitive data is exposed unintentionally (for example, verbose application logs).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Network sniffing",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Search engine analysis/enumeration",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Cryptographic flaws",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Information disclosure",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "3F280CF1-AB67-42AF-A13F-7F9F9D6B5490",
        "questionText":  "A pentester uses Google dorks to locate publicly exposed files and sensitive configurations on a target . Which technique does this represent?",
        "explanation":  "Search engine analysis/enumeration identifies exposed information through advanced queries (Google dorking, for example using \u0026quot;filetype:pdf site:example.com\u0026quot; to locate PDFs). Cryptographic flaws analyze encryption weaknesses (for example, identifying outdated SSL ciphers). Passive reconnaissance involves gathering information without interacting with the target (for example, viewing publicly accessible profiles). Protocol scanning identifies open ports and associated protocols (for example, using Nmap for service detection).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Cryptographic flaws",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Search engine analysis/enumeration",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Passive reconnaissance",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Protocol scanning",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "0A66E8BE-7957-4BDA-A385-81F6D15FA58E",
        "questionText":  "A pentester uses a tool to extract email addresses from public sources like search engines and LinkedIn. Which tool is the most suitable for this task?",
        "explanation":  "theHarvester collects email addresses and other OSINT data from public sources, including search engines and LinkedIn (for example, gathering emails for phishing campaigns). Hunter.io focuses on locating email addresses directly associated with a\u0026nbsp; (for example, verifying valid contacts for a company). Recon-ng is a modular reconnaissance framework (for example, performing WHOIS lookups). DNSdumpster enumerates DNS records (for example, mapping the DNS structure of a target).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Hunter.io",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "theHarvester",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Recon-ng",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "DNSdumpster",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "ACE9DD70-B8B0-4FDB-8528-5F829696C1A1",
        "questionText":  "A pentester modifies a Python script to iterate through a list of server IPs and check their status. Which logic construct is being used?",
        "explanation":  "Loops execute repetitive tasks, such as iterating through server IPs with for server in servers: check_status(server). Conditionals evaluate and act on conditions (if status == \u0026quot;down\u0026quot;:). Boolean operators combine logical conditions (if is_up and is_secure:). Arithmetic operators perform numerical calculations (total_checks = checks_passed + checks_failed).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Conditionals (if status == \u0026quot;down\u0026quot;: print(\u0026quot;Server is down\u0026quot;))",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Boolean operator (if is_up and is_secure: print(\u0026quot;Server is operational\u0026quot;))",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Loops (for server in servers: check_status(server))",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Arithmetic operator (total_checks = checks_passed + checks_failed)",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "D61E114D-B901-4650-9B7A-89113F1977C8",
        "questionText":  "A pentester uses a tool to retrieve archived versions of a company\u0026rsquo;s website to uncover previously available sensitive information. Which tool is the most appropriate for this task?",
        "explanation":  "Wayback Machine allows access to archived versions of websites, making it useful for uncovering previously available information (for example, finding exposed contact details on an old \u0026ldquo;About Us\u0026rdquo; page). Shodan identifies devices connected to the internet (for example, IoT devices). Maltego is used for visualizing relationships between OSINT data (for example, mapping email addresses to s). Recon-ng is a modular reconnaissance framework for gathering OSINT data (for example, performing WHOIS lookups).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Shodan",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Wayback Machine",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Maltego",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Recon-ng",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "80BC90ED-0E49-4874-9EE3-8D2B5DB5F04B",
        "questionText":  "A pentester utilizes a tool to enumerate subs of a target organization by querying public DNS records. Which tool is most appropriate for this task?",
        "explanation":  "Amass performs DNS enumeration to identify subs by querying public DNS records and APIs (for example, discovering hidden subs of a target). SpiderFoot automates OSINT collection for broader purposes (for example, identifying leaked credentials). Hunter.io locates email addresses associated with a\u0026nbsp; (for example, gathering employee contact information). InSSIDer scans wireless networks (for example, visualizing service set identifiers) and signal strength (SSIDs).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Amass",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "SpiderFoot",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Hunter.io",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "InSSIDer",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "910AC857-78E7-42E4-808F-72CE770764D8",
        "questionText":  "A pentester identifies an exposed private key within publicly\u0026nbsp; accessible logs. What type of information gathering technique does this exemplify?",
        "explanation":  "Certificate transparency logs provide publicly accessible information about issued SSL/TLS certificates, sometimes revealing sensitive details (for example, identifying an exposed private key). Network sniffing captures and analyzes network traffic (for example, inspecting packets for plaintext data). OSINT gathers publicly available information (for example, searching public job postings). Information disclosure occurs when sensitive data is inadvertently exposed (for example, verbose error messages in applications).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Open-source intelligence (OSINT)",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Network sniffing",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Certificate transparency logs",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Information disclosure",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "592264EC-307C-426B-A99C-66D8829096A9",
        "questionText":  "A pentester uses a tool to identify service banners and potential vulnerabilities during a port scan. Which tool is the most appropriate?",
        "explanation":  "Nmap is a versatile network scanning tool that performs port scanning, service enumeration, and version detection, making it ideal for identifying service banners and outdated software that could have vulnerabilities. Wireshark is a packet analyzer that captures and inspects network traffic at a granular level, such as detecting unencrypted credentials or analyzing network protocols, but it does not perform port scanning or service enumeration. Maltego is a data visualization tool for OSINT, helping to map relationships between entities like email addresses and s, but it is not designed for network or service-level reconnaissance. DNSdumpster focuses on enumerating DNS records to identify subs and other DNS infrastructure but does not perform port scanning or service banner identification.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Nmap",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Wireshark",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Maltego",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "DNSdumpster",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "CE3E21EE-0701-429F-9937-521D8EB75041",
        "questionText":  "A pentester visualizes relationships between a target\u0026rsquo;s s, email addresses, and IPs using a graphical tool. Which tool is best suited for this purpose?",
        "explanation":  "Maltego creates graphical representations of relationships between OSINT data, such as mapping email addresses to s or IP addresses (for example, linking employee emails to their associated s). DNSdumpster focuses on DNS enumeration (for example, listing subs). Aircrack-ng analyzes wireless network vulnerabilities (for example, cracking WEP keys). theHarvester collects email addresses and subs from public sources (for example, gathering information via search engines).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "DNSdumpster",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Maltego",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Aircrack-ng",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "theHarvester",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "93A758CD-A86D-49A6-B3B2-556B4E72235E",
        "questionText":  "A pentester queries a service to map the geolocation of a Wi-Fi access point based on its MAC address and SSID. Which tool is most appropriate for this task?",
        "explanation":  "WiGLE.net maps Wi-Fi access points and their geolocations based on MAC addresses and SSIDs (for example, identifying physical locations of networks). InSSIDer scans Wi-Fi networks for nearby access points (for example, visualizing channel usage). Wireshark analyzes packet-level network traffic (for example, inspecting Wi-Fi encryption). Recon-ng is an OSINT framework for various types of information gathering (for example, performing WHOIS lookups).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "WiGLE.net",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "InSSIDer",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Wireshark",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Recon-ng",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "63A6E75D-92BC-4975-A12C-4D20C2289F01",
        "questionText":  "A pentester modifies a Python script to detect if a specific keyword exists in network logs. Which logic construct is being applied?",
        "explanation":  "Conditionals execute code when specific conditions are met, such as detecting keywords in logs using if \u0026quot;error\u0026quot; in log_entry: print(\u0026quot;Error found\u0026quot;). Boolean operators evaluate multiple conditions (if is_error and is_critical:). String operators manipulate strings(text) \u0026nbsp;(log_output = log_entry + \u0026quot;_processed\u0026quot;). Loops iterate over multiple items (for log in logs: print(log)).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Conditionals (if \u0026quot;error\u0026quot; in log_entry: print(\u0026quot;Error found\u0026quot;))",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Boolean operator (if is_error and is_critical: print(\u0026quot;Critical error detected\u0026quot;))",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "String operator (log_output = log_entry + \u0026quot;_processed\u0026quot;)",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Loops (for log in logs: print(log))",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "76BE840F-74DA-48EB-8EB7-37A36D96B158",
        "questionText":  "A pentester analyzes packet captures to identify sensitive information transmitted over unencrypted protocols. Which tool is the most appropriate?",
        "explanation":  "Wireshark captures and analyzes network traffic, identifying sensitive information like plaintext credentials transmitted over unencrypted protocols (for example, inspecting HTTP traffic). Ettercap is a tool designed for network attacks such as man-in-the-middle (MITM) attacks and does not primarily focus on packet analysis. Aircrack-ng focuses on Wi-Fi security (for example, cracking WPA2 keys). Shodan identifies exposed devices on the internet (for example, discovering open RDP ports).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Wireshark",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Ettercap",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Aircrack-ng",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Shodan",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "682A1651-5758-4781-88D7-39A24399AF2F",
        "questionText":  "A pentester discovers sensitive information, including plaintext credentials, in publicly available leaked credential repositories. Which technique is being applied?",
        "explanation":  "Password dumps refer to repositories of credentials leaked during breaches, which can be used to identify weak or reused passwords (for example, finding admin credentials from a breach). Information disclosure occurs when sensitive details are unintentionally revealed (for example, via verbose application logs). DNS lookups map s to IP addresses (for example, resolving \u0026quot;example.com\u0026quot; to 192.168.0.1). Network sniffing captures traffic on a network (for example, analyzing packet captures for sensitive data).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Password dumps",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Information disclosure",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "DNS lookups",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Network sniffing",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "A6EC3936-EBD0-423B-B537-3FA048DCC15F",
        "questionText":  "A pentester reviews cryptographic protocols used by a target organization and discovers that SSLv3 is still enabled. Which technique does this scenario illustrate?",
        "explanation":  "Cryptographic flaws involve identifying vulnerabilities in encryption protocols, such as outdated or insecure algorithms (for example, detecting SSLv3 vulnerabilities susceptible to POODLE attacks). Certificate transparency logs reveal publicly available SSL/TLS certificates (for example, finding s linked to a certificate). Password dumps refer to repositories of exposed credentials (for example, searching for admin passwords in breach databases). DNS lookups map\u0026nbsp; names to IP addresses (for example, resolving \u0026quot;example.com\u0026quot; to 192.168.1.1).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Password dumps",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Certificate transparency logs",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Cryptographic flaws",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "DNS lookups",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "78A310ED-FC93-477D-B47A-406EABB5E481",
        "questionText":  "A pentester leverages a tool to capture and analyze traffic on a wireless network to identify vulnerabilities in encryption. Which tool is the most suitable?",
        "explanation":  "Aircrack-ng is specifically designed for wireless security assessments, allowing pentesters to capture and analyze wireless traffic, test encryption vulnerabilities, and crack WEP or WPA2 keys. Wireshark is a versatile network protocol analyzer that captures and inspects packet-level traffic in wired and wireless networks but does not directly focus on encryption vulnerabilities. Tcpdump is a command-line tool for capturing network packets, providing detailed header information and filtering options but lacks specific wireless encryption testing capabilities. InSSIDer is a Wi-Fi network discovery tool that visualizes wireless signals, detects SSID conflicts, and identifies channel overlaps but does not perform detailed encryption analysis or traffic capture.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Aircrack-ng",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Wireshark",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "tcpdump",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "InSSIDer",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "BD90047A-A381-4619-82F2-3EB16B32DDE9",
        "questionText":  "A pentester uses reverse DNS lookups to identify\u0026nbsp; names associated with a specific IP address. Which technique is being applied?",
        "explanation":  "DNS lookups, including reverse DNS queries, identify\u0026nbsp; names linked to IP addresses, helping map an organization\u0026rsquo;s infrastructure (for example, resolving 192.168.0.1 to \u0026quot;example.com\u0026quot;). Cryptographic flaws analyze encryption vulnerabilities (for example, weak cipher usage). OSINT gathers public data (for example, mining job boards for details). Protocol scanning detects active ports and services (for example, scanning for HTTP traffic).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Protocol scanning",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Cryptographic flaws",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Open-source intelligence (OSINT)",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "DNS lookups",
                                  "IsCorrect":  true
                              }
                          ]
    },
    {
        "questionId":  "0026FB32-1921-4C8B-A00C-3EED0D4C9747",
        "questionText":  "A pentester queries a website to identify exposed cryptographic keys and certificates for reconnaissance. Which tool is the most appropriate?",
        "explanation":  "Censys.io specializes in discovering internet-exposed cryptographic keys, SSL/TLS certificates, and misconfigured or vulnerable systems. SpiderFoot is an automated OSINT gathering tool that aggregates data from numerous sources, such as leaked credentials, IP information, and\u0026nbsp; metadata, but it does not focus on cryptographic analysis. Shodan is used to scan the internet for exposed devices and services, such as open ports on IoT devices, but it does not provide in-depth cryptographic certificate discovery. The Wayback Machine is an archive of historical website snapshots, useful for identifying outdated content or old file structures, but it does not perform live reconnaissance or cryptographic analysis.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Censys.io",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "SpiderFoot",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Shodan",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Wayback Machine",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "A5A80575-2453-4FB2-8E91-320C9B084434",
        "questionText":  "A pentester performs a reconnaissance activity by scanning code repositories for sensitive information. Which information gathering technique does this represent?",
        "explanation":  "Open-source intelligence (OSINT) includes gathering publicly available information such as scanning code repositories for sensitive details like hardcoded credentials (for example, searching GitHub for API keys). Network reconnaissance focuses on identifying active hosts and services (for example, mapping network devices). Protocol scanning involves identifying open ports and associated protocols (for example, using Nmap to scan TCP ports). Search engine analysis/enumeration uses search engines to discover exposed information (for example, using Google dork queries).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Network reconnaissance",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Protocol scanning",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Open-source intelligence (OSINT)",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Search engine analysis/enumeration",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "C92351E9-C28A-45A8-8F93-2F2860CAAC98",
        "questionText":  "A pentester uses a tool to analyze HTTP traffic and identify potential sensitive information leakage in web requests. Which tool is the most appropriate?",
        "explanation":  "Wireshark captures and analyzes HTTP traffic, helping identify sensitive information, such as plaintext passwords or session tokens in web requests (for example, inspecting GET or POST parameters). tcpdump captures packet-level traffic but lacks the detailed visualization of Wireshark (for example, logging traffic for further analysis). Nmap performs port scanning and service enumeration (for example, identifying open HTTP ports). Shodan searches for internet-exposed devices and services (for example, finding web servers with open ports).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Wireshark",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "tcpdump",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Nmap",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Shodan",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "73E93CA7-0924-4BDA-A063-0054EF43458F",
        "questionText":  "A pentester enhances a PowerShell script to extract\u0026nbsp; names from a file and perform DNS lookups for each entry. Which logic construct is being applied?",
        "explanation":  "Loops repeat tasks, such as processing\u0026nbsp; names in a file using foreach ($ in Get-Content \u0026quot;s.txt\u0026quot;) { Resolve-DnsName -Name $ }. Boolean operators evaluate logical expressions (if ($ -like \u0026quot;*.example.com\u0026quot; -and $status -eq \u0026quot;Active\u0026quot;)). Conditionals execute code blocks when conditions are met (if ($lookup -eq $true)). String operators manipulate strings (text) \u0026nbsp;\u0026nbsp;($output = $ + \u0026quot;.com\u0026quot;).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Boolean operator (if ($ -like \u0026quot;*.example.com\u0026quot; -and $status -eq \u0026quot;Active\u0026quot;) { Write-Output \u0026quot;Valid \u0026quot;; })",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Conditionals (if ($lookup -eq $true) { Resolve-DnsName -Name $ })",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Loops (foreach ($ in Get-Content \u0026quot;s.txt\u0026quot;) { Resolve-DnsName -Name $ })",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "String operator ($output = $ + \u0026quot;.com\u0026quot;)",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "53E8C1F7-C028-4033-A38C-0B3A1AF4AAE7",
        "questionText":  "A pentester uses a reconnaissance tool to map the access points of a corporate wireless network to identify physical security risks. Which tool is most appropriate?",
        "explanation":  "InSSIDer scans and visualizes wireless networks, identifying access points, signal strength, and channel usage (for example, detecting overlapping channels in a corporate network). WiGLE.net maps Wi-Fi networks globally (for example, identifying the geolocation of access points). Aircrack-ng captures wireless traffic and tests encryption vulnerabilities (for example, cracking WPA2 keys). SpiderFoot automates OSINT collection (for example, identifying credential leaks).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "InSSIDer",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "WiGLE.net",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Aircrack-ng",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "SpiderFoot",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "03AF0813-8383-44F3-8E24-0DED7534BEB1",
        "questionText":  "A pentester uses Nmap to scan a target network for open TCP and UDP ports. Which information gathering technique does this exemplify?",
        "explanation":  "Protocol scanning identifies open ports and associated services, often using tools like Nmap to scan for TCP/UDP protocols (for example, detecting an open SSH port on 22). Active reconnaissance engages with a target directly but focuses more broadly on collecting information (for example, performing vulnerability scans). Network sniffing captures traffic on a network (for example, analyzing IoT device communications). OSINT gathers publicly available data (for example, searching GitHub for exposed credentials).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Open-source intelligence (OSINT)",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Active reconnaissance",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Network sniffing",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Protocol scanning",
                                  "IsCorrect":  true
                              }
                          ]
    },
    {
        "questionId":  "EA5D9E15-03E6-4F41-8A27-113677FC465E",
        "questionText":  "A pentester uses a tool to identify subs by leveraging open-source intelligence and APIs for DNS enumeration. Which tool is the most appropriate?",
        "explanation":  "Amass specializes in discovering subs and DNS records using open-source intelligence and APIs (for example, uncovering hidden subs linked to a target). DNSdumpster performs DNS enumeration for mapping DNS structures (for example, finding MX records). Maltego visualizes relationships between OSINT data (for example, mapping email s). SpiderFoot automates broader OSINT tasks (for example, identifying leaked credentials).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Amass",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "DNSdumpster",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Maltego",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "SpiderFoot",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "0ECD4D87-0B12-4492-92A6-1137F97AB43D",
        "questionText":  "A pentester uses Wireshark to capture and analyze packets traveling across a network, targeting IoT protocols. Which information gathering technique is being applied?",
        "explanation":  "Network sniffing involves capturing and analyzing network traffic to identify information transmitted over IoT and operational technology (OT) protocols (for example, inspecting packets sent over MQTT). Information disclosure occurs when sensitive details are unintentionally exposed (for example, through error messages). Active reconnaissance involves directly engaging with targets to gather information (for example, performing a ping sweep). Cryptographic flaws pertain to vulnerabilities in encryption systems (for example, weak SSL/TLS implementations).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Network sniffing",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Information disclosure",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Active reconnaissance",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Cryptographic flaws",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "44C8FE54-A17B-4333-A77B-1A3A8ED024FA",
        "questionText":  "A pentester searches older versions of a company\u0026#39;s website to uncover sensitive information that has been removed from the live site. Which technique does this describe?",
        "explanation":  "Cached pages allow access to older versions of websites to uncover previously available information (for example, accessing a page through Google Cache). Password dumps refer to databases of leaked credentials (for example, searching breached password repositories). Active reconnaissance involves engaging directly with the target (for example, performing vulnerability scans). Network reconnaissance focuses on identifying active hosts and services (for example, pinging IP ranges).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Active reconnaissance",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Password dumps",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Cached pages",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Network reconnaissance",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "47D2ED55-7E2A-4090-B82B-1C1A36A3EE92",
        "questionText":  "A pentester uses a web-based platform to search for SSL/TLS certificates and find s associated with them. Which tool is being used?",
        "explanation":  "Censys.io allows pentesters to search for SSL/TLS certificates and identify associated s (for example, finding subs linked to a target\u0026#39;s certificate). Amass focuses on DNS enumeration (for example, mapping subs). Aircrack-ng analyzes wireless network vulnerabilities (for example, decrypting WEP keys). Wayback Machine retrieves archived website versions (for example, viewing an older \u0026quot;About Us\u0026quot; page).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Amass",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Censys.io",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Aircrack-ng",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Wayback Machine",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "1BE0EE08-1E9E-4859-B944-1CD49D7F5EAE",
        "questionText":  "A pentester uses a framework to create reconnaissance workflows, such as integrating \u0026nbsp;ownership \u0026nbsp;queries and social media analysis. Which tool is most appropriate for this task?",
        "explanation":  "Recon-ng is a modular OSINT framework that integrates various reconnaissance tasks, such as WHOIS lookups and social media analysis, into automated workflows (for example, gathering\u0026nbsp; information and correlating it with social media profiles). OSINTframework.com organizes available tools (for example, selecting a DNS enumeration tool). Maltego creates graphical representations of OSINT relationships (for example, linking email addresses to s). theHarvester collects OSINT data like email addresses and subs (for example, scraping LinkedIn for contact details).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Recon-ng",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "OSINTframework.com",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Maltego",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "theHarvester",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "94987459-EB5B-4DF0-B5DD-1E19B0BD9F69",
        "questionText":  "A pentester uses a tool to visualize Wi-Fi networks, including SSIDs and channel usage, to identify potential rogue access points. Which tool is most appropriate?",
        "explanation":  "InSSIDer scans and visualizes Wi-Fi networks, identifying SSIDs, signal strength, and channel usage to detect rogue access points or misconfigurations (for example, identifying overlapping channels causing interference). WiGLE.net maps Wi-Fi networks globally (for example, finding network geolocation data). Aircrack-ng analyzes and tests Wi-Fi security (for example, cracking WEP keys). Wireshark inspects network packets (for example, analyzing unencrypted Wi-Fi traffic).",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "InSSIDer",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "WiGLE.net",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Aircrack-ng",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Wireshark",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "E335DC03-584F-4466-B5A6-1F28FC1B6C60",
        "questionText":  "You have identified a vulnerability in a system and want to confirm its validity. Which method could you use to validate the results using an exploit?",
        "explanation":  "Public exploit selection involves using publicly available exploits to validate the presence and severity of a vulnerability. False negative analysis identifies vulnerabilities that were missed by a scan. Troubleshooting scan configurations ensures the tool is set up correctly. Scan completeness verifies whether all targets and vulnerabilities were covered.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Public exploit selection",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "False negative analysis",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Troubleshooting scan configurations",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Scan completeness",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "ECE513AA-3877-4455-B4FF-0452A22EFE39",
        "questionText":  "During a vulnerability scan, the tool reports that a specific port is open and vulnerable. After manually verifying, you find that the service associated with the port is not running. What does this scenario represent?",
        "explanation":  "A false positive occurs when a scan incorrectly flags a vulnerability or open port that does not exist, as in this case where the scanner reported an open port, but the associated service was not running. This can happen due to outdated scan signatures, misconfigurations, or network anomalies. A true positive refers to an accurate identification of a vulnerability or risk, which is not the case here. A false negative occurs when the scanner fails to detect a vulnerability or open port that actually exists, leading to missed security risks. Scan completeness refers to whether the scanning process analyzed all targets and potential vulnerabilities thoroughly but does not describe individual detection errors.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "False positive",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "True positive",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "False negative",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Scan completeness",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "E35B9F12-D963-4642-9005-05B2222FF861",
        "questionText":  "While reviewing a vulnerability scan, you identify that certain systems were skipped due to a misconfigured subnet range. What does this scenario represent?",
        "explanation":  "Public exploit selection involves using publicly available exploits to validate the presence and severity of a vulnerability by testing whether the exploit successfully compromises the system. False negative analysis identifies vulnerabilities missed by a scan, rather than validating already identified ones. Troubleshooting scan configurations ensures that scanning tools are properly set up, such as verifying network access or authentication, but it does not confirm vulnerabilities. Scan completeness focuses on ensuring all intended targets and vulnerabilities are covered during the scan, without testing vulnerabilities using exploits.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Scan completeness",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Public exploit selection",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Troubleshooting scan configurations",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "False negative",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "8038DA86-E1DA-415B-8ED0-12778C094BC1",
        "questionText":  "While analyzing a network, you require a tool to perform a comprehensive vulnerability scan, including checks for compliance issues. Which tool would you select?",
        "explanation":  "Greenbone/OpenVAS is an open-source vulnerability scanning tool capable of performing comprehensive scans to identify security vulnerabilities, misconfigurations, and compliance issues in networked systems. TruffleHog specializes in detecting hardcoded secrets such as API keys or passwords in source code repositories but does not scan for network vulnerabilities. Grype focuses on container image analysis, identifying vulnerabilities in software dependencies and outdated packages. PowerSploit is a post-exploitation framework used for privilege escalation and credential harvesting, which is unrelated to proactive vulnerability scanning.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Greenbone/OpenVAS",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "TruffleHog",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Grype",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "PowerSploit",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "D7A176A9-A8D6-47EC-AD66-1940B179D3D8",
        "questionText":  "While reviewing the output of a vulnerability scanner, you notice several systems were not scanned due to firewall restrictions. Which issue does this indicate?",
        "explanation":  "Scan completeness ensures that all targeted systems and vulnerabilities are successfully scanned, which is critical to providing a comprehensive assessment. In this scenario, firewall restrictions prevented the scanner from reaching certain systems, resulting in incomplete coverage. A false positive refers to incorrectly identifying vulnerabilities that do not exist. A false negative occurs when actual vulnerabilities are missed despite being scanned. Troubleshooting scan configurations involves resolving network or tool-related issues, such as adjusting firewall rules or scanner settings, but does not directly describe the completeness of the scan.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "False positive",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "False negative",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Scan completeness",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Troubleshooting scan configurations",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "408E5A0E-BB01-4A97-A2E1-34E1F6B159E6",
        "questionText":  "You are analyzing vulnerability scan results and find that every detected vulnerability matches known system configurations and exploits. What does this scenario describe?",
        "explanation":  "A true positive occurs when a vulnerability scanner accurately identifies vulnerabilities that exist in the system and can be verified against known configurations and exploits. This ensures that reported vulnerabilities are actionable and align with real-world risks. A false positive happens when a vulnerability is incorrectly reported, leading to unnecessary investigation and resource allocation. A false negative occurs when the scanner fails to detect an actual vulnerability, potentially leaving the system at risk. Scan completeness refers to the thoroughness of the scanning process in covering all assets and potential vulnerabilities, but it does not indicate whether individual results are accurate.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "True positive",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "False positive",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "False negative",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Scan completeness",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "E979F4FB-2944-46DD-85A9-5D6AC323838E",
        "questionText":  "A scan result indicates a misconfigured service on a specific host, but when testing the exploit, it fails to execute successfully. What does this situation represent?",
        "explanation":  "A false positive occurs when a vulnerability is reported but does not actually exist or cannot be exploited. True positives reflect accurate vulnerability detection. Scan completeness ensures all targets are scanned, while troubleshooting scan configurations resolves issues affecting the scanning process.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "False positive",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "True positive",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Scan completeness",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Troubleshooting scan configurations",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "7F77A0A9-8846-4DAF-9326-616D01419C0C",
        "questionText":  "You are scanning a mobile application for vulnerabilities. Which type of scan is specifically designed to identify issues unique to mobile platforms, such as insecure storage or weak API security?",
        "explanation":  "Mobile scans are designed to detect vulnerabilities specific to mobile applications, such as insecure storage, weak API implementations, or improper permissions. Static Application Security Testing (SAST) identifies vulnerabilities in the source code of applications, regardless of platform. Dynamic Application Security Testing (DAST) evaluates application vulnerabilities during runtime. Software Composition Analysis (SCA) identifies vulnerabilities in third-party libraries or frameworks used by the application.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Static Application Security Testing (SAST)",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Dynamic Application Security Testing (DAST)",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Mobile scan",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Software Composition Analysis (SCA)",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "CAC38615-6480-42F6-A725-7821CCBA6436",
        "questionText":  "While conducting a vulnerability assessment, you want to test a web application\u0026#39;s functionality by interacting with it in a working environment to identify security flaws. Which of the following tools would best support this task?",
        "explanation":  "Dynamic Application Security Testing (DAST) evaluates the runtime behavior of applications by interacting with them dynamically to identify vulnerabilities such as SQL injection and cross-site scripting. Static Application Security Testing (SAST) involves analyzing an application\u0026rsquo;s source code to detect flaws before deployment. Interactive Application Security Testing (IAST) operates within a running application and combines both static and dynamic analysis. Software Composition Analysis (SCA) examines third-party dependencies and libraries to identify known vulnerabilities.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Static Application Security Testing (SAST)",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Interactive Application Security Testing (IAST)",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Dynamic Application Security Testing (DAST)",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Software Composition Analysis (SCA)",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "5DC182C3-45F2-4FC1-8849-8D96102EDF7D",
        "questionText":  "Which tool would you use to perform a manual vulnerability assessment on web servers to identify outdated software and configuration issues?",
        "explanation":  "Nikto is an open-source web server scanner that identifies outdated software, configuration issues, and common vulnerabilities. BloodHound is used for Active Directory enumeration and attack path mapping. TruffleHog detects secrets and sensitive information in repositories. PowerSploit is a post-exploitation framework designed for penetration testing.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Nikto",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "BloodHound",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "TruffleHog",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "PowerSploit",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "30ED7E58-568D-43D7-8F52-875409F8AF59",
        "questionText":  "After running a scan, you notice that critical vulnerabilities are not being detected. Upon inspection, you discover that the scanner\u0026#39;s configuration excludes certain ports. What action should you take?",
        "explanation":  "Troubleshooting scan configurations involves reviewing and correcting scanner settings, such as ensuring that critical ports are included, permissions are sufficient, and network access is properly configured. This ensures the scanner can comprehensively identify vulnerabilities. Validating false negatives entails verifying whether missed vulnerabilities exist, but it does not address the root cause of configuration issues. Analyzing true positives focuses on confirming the accuracy of detected vulnerabilities rather than resolving scanner settings. Public exploit selection pertains to choosing suitable exploits for known vulnerabilities and is unrelated to scanner configuration problems.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Troubleshooting scan configurations",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Validate false negatives",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Analyze true positives",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Public exploit selection",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "569206AC-0D71-41A1-998F-8B5C668AB85D",
        "questionText":  "During a vulnerability scan, you need to evaluate container images for known vulnerabilities and misconfigurations. Which tool should you use?",
        "explanation":  "Trivy is specifically designed to scan container images, filesystems, and code repositories for known vulnerabilities, misconfigurations, and outdated packages. It helps identify issues in containers before deployment, ensuring a secure environment. PowerSploit is a post-exploitation framework used for privilege escalation, credential theft, and other offensive security activities, but it does not analyze container images. TruffleHog is a tool for scanning repositories for hardcoded secrets, such as API keys or passwords, but it is not focused on container security. Nikto is a web server vulnerability scanner that evaluates web server configurations and identifies potential issues like outdated software or insecure headers but does not handle container image analysis.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Trivy",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "PowerSploit",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "TruffleHog",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Nikto",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "B7FA7C98-12A9-4E54-9135-7591710CA2FF",
        "questionText":  "Which scanning technique is most suitable for identifying open ports and services on a network without alerting the target system\u0026#39;s administrators?",
        "explanation":  "Stealth scans avoid detection by sending packets in a manner that does not trigger logging or alarms, making them ideal for covert port and service discovery. TCP scans actively test for open TCP ports by initiating standard connection attempts, which are more likely to be logged. UDP scans identify open UDP ports by sending specially crafted packets but are often less reliable due to packet loss or filtering. Authenticated scans provide deeper insight into vulnerabilities by logging into systems with valid credentials",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "TCP scan",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "UDP scan",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Stealth scan",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Authenticated scan",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "DBE5C749-F3EE-4227-8999-8463E4ACEFA4",
        "questionText":  "Which tool is best suited for scanning container images to identify outdated libraries and vulnerabilities?",
        "explanation":  "Grype is a vulnerability scanner designed for container images and file systems, detecting outdated libraries and known vulnerabilities by analyzing package dependencies and software versions. Nikto is a web server scanner that identifies vulnerabilities such as misconfigured headers, outdated software, or insecure HTTP methods but does not target container images. Greenbone/OpenVAS is a network vulnerability scanner used for assessing systems and services across a network, rather than container environments. BloodHound focuses on Active Directory attack path enumeration, mapping relationships and identifying privilege escalation opportunities, but it is not used for vulnerability scanning.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Grype",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Nikto",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Greenbone/OpenVAS",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "BloodHound",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "A150B826-FD3A-4C58-9F28-9001A8A65613",
        "questionText":  "During a penetration test, you need to identify hidden wireless networks a corporate wireless network. Which scanning method would you use?",
        "explanation":  "Service set identifier (SSID) scanning allows testers to detect both visible and hidden wireless network identifiers allowing the penetration tester to locate these hidden networks. Stealth scans are network-based scans designed to bypass detection mechanisms like firewalls and intrusion detection systems. Signal strength scanning measures the strength of signals from access points or client devices to analyze their coverage and potential vulnerabilities. Channel scanning helps identify the specific wireless channels being used by access points to avoid interference or detect unauthorized access.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Stealth scans",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Signal strength scanning",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Service set identifier (SSID) scanning",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Channel scanning",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "60426270-8A04-440B-BB45-9D869FD0A913",
        "questionText":  "You are tasked with finding vulnerabilities in a Kubernetes deployment\u0026#39;s configuration files before deployment. Which technique would best help you identify security flaws?",
        "explanation":  "Static Application Security Testing (SAST) analyzes Infrastructure as Code (IaC) files and source code to detect security vulnerabilities before deployment. Mobile scans are specific to identifying vulnerabilities in mobile applications, such as unprotected sensitive data or insecure communications. Dynamic Application Security Testing (DAST) identifies vulnerabilities by analyzing an application during its execution. Interactive Application Security Testing (IAST) combines both static and dynamic techniques but requires a running application.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Mobile scan",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Static Application Security Testing (SAST)",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Dynamic Application Security Testing (DAST)",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Interactive Application Security Testing (IAST)",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "34C9FA87-F29F-4B42-82F5-94A0FC4C2578",
        "questionText":  "While conducting a vulnerability assessment, you need a tool to detect hardcoded secrets in a code repository. Which tool would you use?",
        "explanation":  "TruffleHog scans repositories to identify hardcoded secrets such as API keys and passwords. Grype is a vulnerability scanner for container images and operating systems. Greenbone/OpenVAS is a comprehensive vulnerability scanning tool for networks. Trivy scans container images and configuration files for security issues.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "TruffleHog",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Grype",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Greenbone/OpenVAS",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Trivy",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "BE48F0FD-44EB-4D31-A6F3-A3AF6175F1F7",
        "questionText":  "After reviewing scan results, you identify that several known vulnerabilities were not detected on a system. What does this scenario indicate?",
        "explanation":  "A false negative occurs when a vulnerability scanner fails to detect an existing vulnerability, which can leave critical risks unaddressed and create a false sense of security. This may result from outdated vulnerability signatures, misconfigured scanning parameters, or limitations of the scanning tool. A false positive refers to incorrectly identifying a vulnerability that does not exist, which can waste time and resources during analysis. A true positive occurs when a vulnerability is accurately detected and reported by the scanner. Public exploit selection involves selecting a suitable exploit to validate or attack a detected vulnerability but is unrelated to detection accuracy.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "False positive",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "True positive",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "False negative",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Public exploit selection",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "A391E11C-E765-4111-954C-B05B86C1ED33",
        "questionText":  "You are analyzing vulnerability scan output and want to use a Python script to verify if detected vulnerabilities can be exploited. What task are you performing?",
        "explanation":  "Using scripting to validate results involves creating or running custom scripts to confirm the presence and exploitability of vulnerabilities by testing them directly. Public exploit selection focuses on identifying and using pre-existing exploits for known vulnerabilities rather than creating scripts. Troubleshooting scan configurations resolves setup issues with the scanner, such as incorrect network settings, and does not involve testing vulnerabilities. False positive analysis is the process of verifying whether reported vulnerabilities are legitimate or incorrectly flagged, without directly testing exploitability.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Use scripting to validate results",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Public exploit selection",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Troubleshooting scan configurations",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "False positive analysis",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "6C9EDC15-EFAB-4F7B-9060-9DA2EE4B184B",
        "questionText":  "After conducting a network scan, you suspect that certain vulnerabilities are false positives. Which method would you use to confirm their validity?",
        "explanation":  "Using scripting to validate results allows you to manually confirm vulnerabilities by interacting directly with the target system. Analyzing scan completeness checks whether the scan covered all targets. False negative analysis identifies missed vulnerabilities. Public exploit selection tests known vulnerabilities to confirm their severity.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Use scripting to validate results",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Analyze scan completeness",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "False negative analysis",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Public exploit selection",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "A4496EDA-B200-42BE-BCD3-ACFA27DF4FE8",
        "questionText":  "You are conducting a vulnerability scan on a wireless network and need to identify the specific wireless channels being used by access points in the environment. Which scanning method would you use?",
        "explanation":  "Channel scanning identifies which wireless channels are in use, allowing the tester to detect unauthorized access points or optimize wireless performance. Signal strength scanning measures the power level of wireless signals to determine coverage areas and potential vulnerabilities. Service set identifier (SSID) scanning detects visible and hidden wireless networks. Secrets scanning focuses on identifying hardcoded sensitive data like passwords or API keys in source code or configurations.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Channel scanning",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Signal strength scanning",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Service set identifier (SSID) scanning",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Secrets scanning",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "9599072B-E3EE-465E-B605-BE4B8C2BBFC8",
        "questionText":  "While analyzing a source code repository, you want to identify hardcoded secrets, such as passwords or API keys, that may have been accidentally exposed. Which scanning method should you use?",
        "explanation":  "Secrets scanning identifies exposed sensitive information, such as hardcoded passwords or API keys, in source code or configuration files. Static Application Security Testing (SAST) focuses on identifying vulnerabilities in source code, such as SQL injection flaws. Software Composition Analysis (SCA) evaluates the security of third-party dependencies. Interactive Application Security Testing (IAST) operates within a running application and examining source code, effectively combining runtime and static analysis techniques.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Secrets scanning",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Static Application Security Testing (SAST)",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Software Composition Analysis (SCA)",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Interactive Application Security Testing (IAST)",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "91E7C5C1-758F-4C95-95A0-CFB007DD925D",
        "questionText":  "During an ICS vulnerability assessment, you need to manually review configurations and logs to identify security weaknesses. What approach should you use?",
        "explanation":  "Manual assessment is the process of manually reviewing system configurations, log files, and operational settings to identify vulnerabilities or misconfigurations in Industrial Control Systems (ICS). Port mirroring involves duplicating network traffic to a monitoring device for analysis, which is useful for detecting network-based threats but does not review configurations or logs. Trivy is designed for container security, scanning images and files for vulnerabilities, and is not applicable to ICS assessments. Secrets scanning identifies hardcoded sensitive information, such as API keys or passwords, in files or repositories, but it does not involve log or configuration review.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Manual assessment",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Port mirroring",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Trivy",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Secrets scanning",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "EC6D588F-A6C0-493D-9125-D0F7DBA45303",
        "questionText":  "You are assessing a web application and want to identify insecure third-party libraries it uses. Which scanning method should you choose?",
        "explanation":  "Software Composition Analysis (SCA) identifies vulnerabilities in third-party libraries and frameworks used in an application by comparing them against a database of known vulnerabilities. Static Application Security Testing (SAST) analyzes the application\u0026#39;s source code to detect vulnerabilities in custom code. Dynamic Application Security Testing (DAST) tests the application while it is running to detect runtime vulnerabilities. Mobile scans specifically identify vulnerabilities unique to mobile applications, such as unprotected storage or insecure APIs.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Software Composition Analysis (SCA)",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Static Application Security Testing (SAST)",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Dynamic Application Security Testing (DAST)",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Mobile scan",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "D7F7A199-F17C-48F3-97D5-D2013C0A599D",
        "questionText":  "You are conducting a host-based vulnerability scan to analyze the security posture of a single system. Which scanning method would provide the most comprehensive results?",
        "explanation":  "Authenticated scans provide access to the target system using valid credentials, enabling the identification of vulnerabilities like misconfigurations, unpatched software, or insecure settings. Unauthenticated scans simulate an attacker\u0026rsquo;s perspective by evaluating vulnerabilities without logging in. Network scans test for open ports and services across a network rather than focusing on a single system. Stealth scans minimize the chance of detection but provide less detail compared to authenticated scans.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Authenticated scan",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Unauthenticated scan",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Network scan",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Stealth scan",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "6E52D728-C0C5-43AF-84BE-CD0FA19AB5F2",
        "questionText":  "Which tool is best suited for mapping attack paths and enumerating privileges within an Active Directory environment?",
        "explanation":  "BloodHound is specifically designed for Active Directory enumeration and visualizing attack paths by analyzing relationships and permissions. Tenable Nessus is primarily used for network vulnerability scanning, identifying misconfigurations, missing patches, and other network-related security risks. Nikto is a web server vulnerability scanner that identifies outdated software, misconfigurations, and dangerous files on web servers but has no capability for Active Directory enumeration or privilege mapping. Grype is a vulnerability scanner for container images and operating systems, focusing on identifying security flaws in dependencies and software packages, not on Active Directory or privilege enumeration.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "BloodHound",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Tenable Nessus",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Nikto",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Grype",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "3D9B2590-A7E2-44C8-8436-DF93CE83D599",
        "questionText":  "During an industrial control system (ICS) vulnerability assessment, you are tasked with capturing network traffic for analysis without disrupting the production environment. Which method would you use?",
        "explanation":  "Port mirroring allows you to capture and analyze network traffic by duplicating it from a switch port without disrupting the live environment. Manual assessment involves manually evaluating system configurations and logs but does not capture live traffic. Stealth scans are used to detect open ports without triggering alerts. Secrets scanning focuses on identifying exposed sensitive information in files or repositories.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Manual assessment",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Port mirroring",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Stealth scan",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Secrets scanning",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "630B395D-340E-4D14-A447-D85E2E424931",
        "questionText":  "Which post-exploitation framework would you use to execute PowerShell-based scripts for privilege escalation and persistence?",
        "explanation":  "Greenbone/OpenVAS is an open-source vulnerability scanning tool capable of performing comprehensive scans to identify security vulnerabilities, misconfigurations, and compliance issues in networked systems. TruffleHog specializes in detecting hardcoded secrets such as API keys or passwords in source code repositories but does not scan for network vulnerabilities. Grype focuses on container image analysis, identifying vulnerabilities in software dependencies and outdated packages. PowerSploit is a post-exploitation framework used for privilege escalation and credential harvesting, which is unrelated to proactive vulnerability scanning.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "PowerSploit",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "BloodHound",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Tenable Nessus",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Nikto",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "F76394EB-125B-4A8A-99CD-FDCD5BEF4462",
        "questionText":  "You are performing a network vulnerability assessment and need a robust tool to scan for a wide range of vulnerabilities across multiple systems. Which tool would be most appropriate?",
        "explanation":  "Tenable Nessus is a comprehensive vulnerability scanner capable of detecting a wide range of issues, including software vulnerabilities, misconfigurations, and compliance violations, across networked systems. Trivy specializes in scanning container images and repositories for vulnerabilities and misconfigurations but is not a general-purpose network vulnerability scanner. BloodHound is used for mapping Active Directory relationships and attack paths, focusing on privilege escalation and lateral movement rather than broad vulnerability scanning. PowerSploit is a post-exploitation toolkit used for tasks like privilege escalation and credential harvesting, making it unsuitable for proactive vulnerability assessment.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Tenable Nessus",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Trivy",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "BloodHound",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "PowerSploit",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "170467D7-E59C-4F15-8721-FBCBA6DC8B90",
        "questionText":  "A client has requested a vulnerability scan that does not involve logging into the target systems. Which type of scan aligns with this requirement?",
        "explanation":  "Unauthenticated scans evaluate systems without requiring credentials, providing an external perspective on vulnerabilities that an attacker could exploit. Authenticated scans involve logging into systems with credentials to detect deeper security flaws. Host-based scans focus on individual systems or devices, identifying vulnerabilities like outdated software or misconfigurations. Secrets scanning involves analyzing source code or configurations to detect exposed sensitive information, such as API keys or passwords.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Authenticated scan",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Unauthenticated scan",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Host-based scan",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Secrets scanning",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "E1D917D9-AEE1-499C-BDD7-EF4D27967C38",
        "questionText":  "During a network vulnerability scan, you need to identify open connectionless ports and services. Which type of scan should you perform?",
        "explanation":  "UDP is a connectionless protocol.\u0026nbsp; UDP scans test for open UDP ports by sending specially crafted packets to each port and waiting for responses or errors, identifying services that use connectionless protocols. TCP is a connection-oriented protocol. TCP scans test for open TCP ports by attempting to establish connections using the three-way handshake process. Stealth scans avoid detection mechanisms but can test both TCP and UDP ports. Authenticated scans log into the target system to provide deeper insights into internal vulnerabilities.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "TCP scan",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "UDP scan",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Stealth scan",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Authenticated scan",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "ABFB0F2D-308D-40DB-8F08-E8BE36988203",
        "questionText":  "During a wireless network vulnerability assessment, you need to measure the power levels of access points to determine their coverage and signal range. Which scanning method is most appropriate?",
        "explanation":  "Signal strength scanning measures the power levels of wireless signals to determine coverage areas and detect potential vulnerabilities related to rogue access points or overexposure. Channel scanning identifies wireless channels in use to detect interference or unauthorized devices. Service set identifier (SSID) scanning detects visible and hidden networks. Stealth scans are network-based scans used to bypass detection mechanisms.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Signal strength scanning",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Channel scanning",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Service set identifier (SSID) scanning",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Stealth scans",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "5E85217B-8CE2-47B1-AA6D-F5AFD10C52BB",
        "questionText":  "During an engagement, you want to exploit a system by leveraging captured NTLM hashes without knowing the plaintext password. Which type of attack would you perform?",
        "explanation":  "Pass-the-hash attacks allow authentication using NTLM hash values instead of plaintext passwords, bypassing the need for decryption. Pass-the-ticket attacks leverage Kerberos tickets for authentication. Credential stuffing uses stolen credentials across multiple services. Brute-force attacks systematically try every possible password combination to crack authentication.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Pass-the-hash attack",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Pass-the-ticket attack",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Credential stuffing",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Brute-force attack",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "C25380C3-9156-4695-B45C-E11787A025BA",
        "questionText":  "During a cloud penetration test, you discover that a third-party integration allows access to sensitive data due to overly permissive API configurations. Which type of attack does this scenario represent?",
        "explanation":  "Third-party integration abuse occurs when attackers exploit insecure or overly permissive API configurations in third-party integrations to gain unauthorized access to sensitive data. For example, an attacker might manipulate an API endpoint to access or exfiltrate confidential information stored within the cloud service. Metadata service attacks involve targeting cloud metadata endpoints, such as AWS instance metadata, to obtain sensitive information like temporary credentials. Trust relationship abuse leverages excessive or poorly defined trust between cloud accounts, roles, or services to escalate privileges or access restricted resources. Resource misconfiguration refers to general cloud misconfigurations, such as improperly secured storage buckets or overly permissive IAM policies, which are broader than specific third-party integration vulnerabilities.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Third-party integration abuse",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Metadata service attack",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Trust relationship abuse",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Resource misconfiguration",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "35D89418-EB41-41E9-918E-E1A1E36BF8D5",
        "questionText":  "While analyzing an EPSS report, you find a vulnerability with a high likelihood of exploitation but a low CVSS base score. How should this finding be prioritized?",
        "explanation":  "The Exploit Prediction Scoring System (EPSS) evaluates the likelihood of a vulnerability being exploited in real-world scenarios, which can take precedence over CVSS base scores when prioritizing remediation efforts. For example, a vulnerability with a low CVSS score but a high EPSS score could pose a significant threat if exploitation is likely. Treating vulnerabilities solely based on CVSS scores may lead to overlooking critical risks, especially in active threat landscapes. Ignoring or categorizing such findings as informational could leave systems vulnerable to exploitation despite their technical severity appearing low.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Prioritize based on the EPSS score.",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Treat it as a low-priority vulnerability.",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Ignore it due to the low CVSS score.",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Consider it informational only.",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "4649B7B7-4A86-44D6-B819-E305977E41AE",
        "questionText":  "You want to test network packet manipulation by crafting and sending custom packets during a penetration test. Which Python library would you use?",
        "explanation":  "Scapy is a Python library for crafting, sending, and analyzing network packets, making it ideal for packet manipulation tasks. Impacket is used for protocol-specific attacks like SMB and Kerberos. Infection Monkey is a breach and attack simulation tool. Atomic Red Team provides prebuilt tests for simulating adversary tactics.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Scapy",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Impacket",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Infection Monkey",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Atomic Red Team",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "57673854-E43D-4142-B98F-DE06E889A75C",
        "questionText":  "During a penetration test, you write a Python script to manipulate and analyze raw network packets for custom traffic generation. Which tool would you use?",
        "explanation":  "Scapy is a powerful Python-based library for crafting, sending, receiving, and analyzing raw network packets, enabling testers to create custom traffic for testing purposes. For example, Scapy can generate packets to test firewall rules or simulate specific protocols. Impacket is also a Python library but is focused on network protocol exploitation, such as SMB or LDAP. Infection Monkey is a breach and attack simulation (BAS) tool used to test network resiliency, not for raw packet manipulation. Caldera automates adversary emulation and is not designed for custom packet generation tasks like Scapy.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Scapy",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Impacket",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Infection Monkey",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Caldera",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "2A76B04B-D18E-4A05-A003-E401CF035858",
        "questionText":  "During a red team engagement, you use PowerSploit to execute a PowerShell script that creates a reverse shell on a target machine. What is the purpose of this script?",
        "explanation":  "PowerSploit includes scripts for creating reverse shells, allowing a compromised system to establish a connection back to the attacker\u0026#39;s machine for further control and exploitation. Active Directory enumeration is performed using tools like PowerView, which are specialized for querying AD objects. SQL Server manipulation is achieved with PowerUpSQL, which focuses on database exploitation and privilege escalation. Packet crafting is typically handled by tools such as Scapy, which is designed for creating and analyzing network packets.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Establish a connection back to the attacker\u0026rsquo;s system",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Enumerate Active Directory objects",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Manipulate SQL Server databases",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Automate packet crafting",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "ED68E0A7-66CE-4FA9-AA53-E8BD13370B75",
        "questionText":  "You identify a server hosting sensitive financial data. Which factor makes this server a high-priority target?",
        "explanation":  "High-value asset identification involves recognizing critical systems or sensitive data, such as financial information, intellectual property, or personally identifiable information (PII), that would have severe consequences if compromised. For example, compromising a financial server could lead to significant monetary loss or regulatory penalties. End-of-life software/systems refer to unsupported software that introduces vulnerabilities due to lack of updates but is not directly tied to asset value. EPSS predicts the likelihood of a vulnerability being exploited but does not assess the importance of the asset itself. Default configurations refer to insecure factory settings, such as default passwords, which increase attack susceptibility but do not define the value of the asset.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "End-of-life software/systems",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "High-value asset identification",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Exploit Prediction Scoring System (EPSS)",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Default configurations",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "67C233AA-240B-4B56-BFB5-E63A00C46894",
        "questionText":  "During a web application assessment, you identify functionality that accepts user input and includes it in server-side requests. Which attack type would you test?",
        "explanation":  "Server-side request forgery (SSRF) allows attackers to exploit a server by sending unauthorized requests to internal or external systems through vulnerable server functionality, potentially exposing sensitive internal resources or bypassing firewalls. For example, an attacker may manipulate an input field to redirect requests to an internal network resource, such as a metadata service. Cross-site request forgery (CSRF) involves tricking authenticated users into executing unintended actions on a web application, such as changing account settings, but it is unrelated to server-side input handling. Local file inclusion (LFI) exploits vulnerabilities to include local files, such as configuration files or sensitive data, through file path manipulation, which is different from SSRF\u0026#39;s focus on requests. JSON Web Token (JWT) manipulation involves altering or forging tokens used for authentication, aiming to bypass security controls, but it is not relevant to server-side request vulnerabilities.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Server-side request forgery (SSRF)",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Cross-site request forgery (CSRF)",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Local file inclusion (LFI)",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "JSON Web Token (JWT) manipulation",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "19B8DD95-1EA7-42ED-83F1-E7D2AF6ACAA2",
        "questionText":  "During a penetration test, you identify an image in a container registry that contains malicious modifications to its source code. What type of attack does this represent?",
        "explanation":  "Image and artifact tampering occurs when attackers modify container images or artifacts stored in a container registry, introducing malicious code, backdoors, or vulnerabilities into the images. For example, attackers may inject scripts that execute upon deployment, compromising systems using the tampered container. Workload runtime attacks exploit vulnerabilities during the execution of workloads, such as containers or virtual machines, but do not specifically involve registry images. Supply chain attacks target the third-party software or services that an organization relies on, which could include compromised build tools or dependencies but are broader in scope than container image tampering. Metadata service attacks exploit cloud instance metadata endpoints to extract sensitive information, such as temporary credentials, and are unrelated to container images.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Image and artifact tampering",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Workload runtime attack",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Supply chain attack",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Metadata service attack",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "B67A7663-4970-4B25-A273-B84DDE76E27A",
        "questionText":  "While testing a kiosk system, you find a way to access a command prompt by manipulating input fields. Which attack type does this represent?",
        "explanation":  "Kiosk escape occurs when an attacker bypasses the restricted interface of a kiosk system, such as a limited web browser or application, to gain access to unauthorized areas like the command prompt or operating system. For example, exploiting input fields or hotkeys may allow access to administrative tools. Shell escape refers to breaking out of restricted command-line environments, such as restricted shells in Unix systems, but it is not specific to kiosk systems. Privilege escalation focuses on obtaining higher access rights, such as administrative privileges, and may occur after escaping a kiosk interface. User-controlled access bypass involves circumventing access controls to reach restricted resources but does not necessarily pertain to kiosk environments or restricted interfaces.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Kiosk escape",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Shell escape",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Privilege escalation",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "User-controlled access bypass",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "CAAB284E-1C8A-4D24-8AFF-CE4E6566C859",
        "questionText":  "During a penetration test, you want to test a system\u0026#39;s password strength by systematically attempting common passwords from a predefined list. Which attack type does this represent?",
        "explanation":  "A dictionary attack systematically tries passwords from a predefined list, focusing on commonly used passwords. Brute-force attacks attempt every possible password combination. Password spraying uses a single password across many accounts to avoid lockouts. Mask attacks refine brute-force attacks by applying rules like known character patterns or lengths.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Dictionary attack",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Brute-force attack",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Password spraying",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Mask attack",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "1D9D80ED-B0BD-413D-889C-BD103F75A0F2",
        "questionText":  "You are assessing a cloud environment and find misconfigured IAM roles that allow attackers to escalate privileges and compromise additional resources. What type of attack are you testing?",
        "explanation":  "Identity and access management (IAM) misconfigurations occur when roles, policies, or permissions in a cloud environment are improperly defined, allowing attackers to escalate privileges or access unauthorized resources. For example, granting overly permissive roles like \u0026quot;Administrator\u0026quot; to unintended users can enable attackers to compromise additional resources. Container escape attacks target vulnerabilities within containerized applications to break out of the container and access the underlying host system, which is unrelated to IAM. Logging information exposure involves the unintentional public availability of sensitive data, such as credentials or API keys, within cloud logs. Workload runtime attacks exploit vulnerabilities during the execution of cloud workloads, such as virtual machines or containers, rather than focusing on IAM policies.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Identity and access management misconfiguration",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Container escape",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Logging information exposure",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Workload runtime attack",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "1355ED3D-7B42-4336-90B3-A48103B44F71",
        "questionText":  "You are attempting to evade antivirus detection by modifying the structure of a payload without altering its functionality. Which attack type does this represent?",
        "explanation":  "Payload obfuscation involves modifying the structure or encoding of malicious payloads to bypass detection by antivirus or other security tools while ensuring that the payload\u0026#39;s functionality remains intact. For instance, attackers may use encoding or polymorphic techniques to evade signature-based detection. Process hollowing refers to injecting malicious code into a legitimate process\u0026#39;s memory space to hide malicious activity, which is a different form of evasion. Credential dumping extracts authentication credentials, such as password hashes or plaintext credentials, from a compromised system but is not related to payload manipulation. Circumventing security tools is a broader category that includes various evasion techniques, including payload obfuscation, but does not specifically describe this action.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Payload obfuscation",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Process hollowing",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Credential dumping",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Circumventing security tools",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "87FAAF59-A622-4B35-9619-968B0818E10C",
        "questionText":  "You want to automate the identification of misconfigured S3 buckets in a cloud environment using a Python script. Which breach and attack simulation (BAS) tool would you use?",
        "explanation":  "ScoutSuite is a Python-based auditing tool designed to identify misconfigurations in cloud environments, such as publicly accessible S3 buckets in AWS. It automates security assessments and generates reports, making it ideal for identifying cloud-related risks. Infection Monkey is a breach and attack simulation (BAS) tool that tests network resilience by simulating lateral movement and privilege escalation but does not focus on cloud misconfigurations. Atomic Red Team provides a library of predefined attack techniques that emulate adversary behavior but lacks specific automation for cloud misconfiguration scanning. Caldera is a BAS framework that automates adversary emulation, focusing on endpoint and network simulations rather than detailed cloud configuration analysis.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Infection Monkey",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Atomic Red Team",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Caldera",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "ScoutSuite",
                                  "IsCorrect":  true
                              }
                          ]
    },
    {
        "questionId":  "C4FEA71C-7696-4F24-BD38-9FE5321F131A",
        "questionText":  "You want to automate database enumeration and privilege escalation in database environments during a penetration test. Which tool would you use?",
        "explanation":  "PowerUpSQL is a PowerShell tool specifically designed for automating SQL Server enumeration, privilege escalation, and exploitation, making it ideal for database-focused penetration tests. AD search is used for querying and analyzing Active Directory environments but does not address SQL Server environments. PowerView is a tool for enumerating Active Directory environments and privilege escalation within them, not for databases. Scapy is a network packet manipulation tool, useful for crafting and analyzing packets but unrelated to database enumeration or privilege escalation.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "PowerUpSQL",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "AD search",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "PowerView",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Scapy",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "3A79FE43-6DF5-4B26-BBAA-9DA0F82BAADA",
        "questionText":  "While simulating an attack, you write a Bash script to parse log files for failed login attempts and automate brute-force attacks. Which scripting functionality are you utilizing?",
        "explanation":  "Input/output management in Bash enables the handling and processing of data from log files, such as extracting information about failed login attempts to automate brute-force attacks. For example, you could use Bash to read log entries from /var/log/auth.log, filter failed login records, and pass extracted usernames to an attack script. Data manipulation involves modifying or transforming data, which could be a secondary task in this scenario but is not the primary functionality here. Breach and attack simulation (BAS) tools are designed to emulate attacker behavior on a larger scale but do not directly involve scripting log file parsing. PowerShell enumeration focuses on Windows environments and is unrelated to Bash scripting or log parsing in this context.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Input/output management",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Data manipulation",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Breach and attack simulation (BAS)",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "PowerShell enumeration",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "57F0EB9F-BF2B-401D-AB35-7E43CCFD90C3",
        "questionText":  "During a penetration test, you exploit a vulnerability in a third-party dependency included in a target\u0026#39;s software build process. What type of attack does this represent?",
        "explanation":  "Supply chain attacks target third-party dependencies, libraries, or services that are part of an organization\u0026rsquo;s software development or deployment process. For example, an attacker may compromise a popular library used in the target\u0026#39;s software, introducing vulnerabilities that propagate through the build process. Image and artifact tampering involves modifying container registry images, not software dependencies. Workload runtime attacks exploit vulnerabilities during the execution phase of workloads, such as containers or virtual machines. Metadata service attacks exploit cloud instance metadata endpoints to access sensitive information, such as temporary credentials.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Image and artifact tampering",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Workload runtime attack",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Supply chain attack",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Metadata service attack",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "10507862-A081-4013-929E-988A94DBA164",
        "questionText":  "During a penetration test, you want to identify all Active Directory (AD) group memberships for a specific user using a PowerShell script. Which tool would you use?",
        "explanation":  "PowerView is a PowerShell tool for enumerating Active Directory environments, including querying group memberships and other AD objects. PowerUpSQL focuses on SQL Server exploitation. PowerSploit is a framework for various exploitation tasks. AD search allows for querying and searching Active Directory objects but lacks PowerView\u0026rsquo;s full enumeration capabilities.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "PowerView",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "PowerUpSQL",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "PowerSploit",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "AD search",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "996BE612-E2EB-4063-BE87-99AC9D2A2B47",
        "questionText":  "During a penetration test, you use Hydra to try multiple username-password combinations on an SSH server. Which attack type are you performing?",
        "explanation":  "Brute-force attacks systematically attempt every possible username-password combination until the correct credentials are found. For example, Hydra can automate this process to target authentication services like SSH, FTP, or HTTP. Dictionary attacks use a predefined list of common passwords, which is more limited in scope than a brute-force attack. Password spraying tests one password across multiple accounts to avoid lockouts due to repeated failures on a single account, differing in strategy from brute-forcing. Pass-the-hash attacks leverage stolen password hashes to authenticate without requiring plaintext credentials, making it unrelated to Hydra\u0026#39;s typical functionality.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Brute-force attack",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Dictionary attack",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Password spraying",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Pass-the-hash attack",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "1475CB0A-689B-4306-9B40-853692E71EC6",
        "questionText":  "During a penetration test, you discover that a containerized workload in the cloud has been misconfigured, allowing the container to access the underlying host. Which attack type are you performing?",
        "explanation":  "Container escape occurs when an attacker exploits vulnerabilities in a containerized environment to break out of the container and access the host system. Metadata service attacks target cloud metadata endpoints to retrieve sensitive data. Workload runtime attacks exploit vulnerabilities in the execution of cloud-based workloads. Image and artifact tampering involve modifying container images or artifacts to introduce malicious code.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Container escape",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Metadata service attack",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Workload runtime attack",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Image and artifact tampering",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "6EAC7060-D582-4888-B7F8-7D2903E9CAC9",
        "questionText":  "Which prioritization metric evaluates the technical characteristics and impact of a vulnerability?",
        "explanation":  "The CVSS base score evaluates the technical characteristics and impact of a vulnerability, including factors like exploitability and severity, making it a key metric for prioritization. EPSS predicts the likelihood of exploitation based on real-world threat data but does not assess the technical impact. CWE categorizes software weaknesses to help developers understand and address common coding flaws, rather than measuring vulnerability impact. CVE provides standardized identifiers for known vulnerabilities, enabling easy tracking and referencing, but it does not assess technical characteristics or impact.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Common Vulnerability Scoring System (CVSS) base score",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Exploit Prediction Scoring System (EPSS)",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Common Weakness Enumeration (CWE)",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Common Vulnerabilities and Exposures (CVE)",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "2529168C-64A0-4011-8523-8BA038A2C145",
        "questionText":  "You are targeting an application that uses directory service and suspect it is vulnerable. Which attack type would you perform?",
        "explanation":  "LDAP injection manipulates LDAP queries by injecting malicious input, potentially bypassing authentication or gaining unauthorized access. SAML attacks exploit Security Assertion Markup Language for identity verification manipulation. OpenID Connect (OIDC) attacks target the OpenID authentication flow. Kerberos attacks focus on exploiting the Kerberos authentication protocol.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "LDAP injection",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "SAML attack",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "OpenID Connect (OIDC) attack",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Kerberos attack",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "1DC01A43-130F-4C4B-AAF7-8C0A69A12485",
        "questionText":  "While testing a file upload feature, you find a vulnerability that allows you to include files from a remote server. Which attack type does this represent?",
        "explanation":  "Remote file inclusion (RFI) occurs when an attacker exploits a vulnerability in a web application to include files from a remote server, potentially enabling the execution of malicious scripts or commands on the target server. For example, RFI can allow attackers to host malicious files on their server and execute them through the vulnerable application. Local file inclusion (LFI) allows the attacker to include files from the local server\u0026rsquo;s filesystem, such as configuration or sensitive data files, rather than remote ones. A web shell is a malicious script uploaded to a server to allow attackers to execute commands and maintain control but does not involve file inclusion during the upload process. Arbitrary code execution exploits vulnerabilities to execute attacker-specified code, but this is broader than the specific mechanism of RFI.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Remote file inclusion (RFI)",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Local file inclusion (LFI)",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Web shell",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Arbitrary code execution",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "67F2F2E8-FE2B-475F-8592-88BEB8563605",
        "questionText":  "You set up a malicious proxy to intercept a company\u0026#39;s internal web traffic after impersonating a legitimate employee. Which tool would you use for this attack?",
        "explanation":  "Evilginx is a tool specifically designed for man-in-the-middle attacks, allowing the setup of malicious proxies to intercept credentials or web traffic during phishing campaigns. BeEF focuses on exploiting web browsers by hooking them for further attacks but does not set up malicious proxies. Gophish is a phishing toolkit used to create and manage phishing campaigns but does not intercept traffic. theHarvester is a reconnaissance tool that collects public information, such as email addresses and subs, and is not used for active man-in-the-middle attacks.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Evilginx",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "BeEF",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Gophish",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "theHarvester",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "27F4A52A-5B68-406A-B7B0-8F98FAE02504",
        "questionText":  "While assessing an API endpoint, you find it accepts tokens for authentication. You suspect the tokens are not validated securely. Which attack type would you attempt?",
        "explanation":  "JSON Web Token (JWT) manipulation involves altering or forging tokens to bypass authentication or escalate privileges. Cross-site scripting (XSS) injects malicious scripts into web pages. SQL injection targets database queries. Server-side request forgery (SSRF) manipulates server-side requests to access unintended resources.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "JSON Web Token (JWT) manipulation",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Cross-site scripting (XSS)",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "SQL injection",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Server-side request forgery (SSRF)",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "BFDDFC0F-A4BE-4B67-A258-748ABCB31878",
        "questionText":  "While analyzing a system, you discover several unused services running on a high-value target. What action should you prioritize?",
        "explanation":  "Identifying vulnerabilities in the running services is a critical step, as these services are active and could provide attackers with an entry point into the system. For example, running services might expose outdated versions or misconfigurations that can be exploited to compromise the target. Exploiting unused services is typically not feasible, as they are not actively providing functionality and may not respond to attacks. End-of-life software is another prioritization factor but is unrelated to the issue of unused or running services. Ignoring running services leaves potential vulnerabilities unaddressed, increasing the risk of exploitation.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Exploit the unused services.",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Identify vulnerabilities in the running services.",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Focus on systems with end-of-life software.",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Ignore the unused services.",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "BFD8E48F-56F0-4E2C-A32F-6F19FD8112BD",
        "questionText":  "A penetration tester discovers a system with weak default configurations. Which of the following best describes why this is a significant target?",
        "explanation":  "Default configurations often include predictable settings, such as default passwords, ports, or permissions, making them easier for attackers to exploit. High-value assets are determined by the data or functionality they provide, not solely by their configurations. Default configurations do not necessarily indicate the use of outdated software, as even updated systems can have weak default settings. Systems with weak configurations are more likely to be susceptible to privilege escalation attacks, not immune to them.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Such systems are often easier to exploit due to predictable settings.",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "These systems are automatically high-value assets.",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "They always use outdated software.",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "They are typically immune to privilege escalation attacks.",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "74BF8DAF-2801-4A84-B1AE-6944CD16BDBB",
        "questionText":  "During a cloud security test, you identify a Kubernetes cluster with insecure settings that allow unauthorized users to modify workloads. Which tool would you use to identify and exploit these vulnerabilities?",
        "explanation":  "Kube-hunter is specifically designed to assess the security of Kubernetes clusters, identifying misconfigurations, insecure settings, and vulnerabilities that attackers could exploit, such as unauthorized access to workloads or administrative interfaces. For example, it can detect open ports, exposed APIs, and privilege escalation paths in Kubernetes environments. Pacu is a cloud exploitation framework tailored for AWS, focusing on vulnerabilities specific to that platform, such as IAM misconfigurations or S3 bucket exposure. Prowler is a security assessment tool that evaluates AWS environments for misconfigurations and compliance issues but does not target Kubernetes. Docker Bench analyzes the security of Docker configurations, ensuring container security best practices are followed, which is unrelated to Kubernetes-specific testing.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Kube-hunter",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Pacu",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Prowler",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Docker Bench",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "C855D4E0-A29F-4B19-A52E-6AFDAC583769",
        "questionText":  "During a web application assessment, you notice a parameter in a URL that appears to access local files on the server. You suspect it is vulnerable to reading sensitive files, such as /etc/passwd. Which attack type would you test?",
        "explanation":  "Local file inclusion (LFI) vulnerabilities allow attackers to include files stored locally on the server, potentially exposing sensitive data. Remote file inclusion (RFI) involves files hosted on external servers. Directory traversal exploits improper file path validation to access restricted directories. Arbitrary code execution involves executing attacker-controlled code.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Local file inclusion (LFI)",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Remote file inclusion (RFI)",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Directory traversal",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Arbitrary code execution",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "50DFA18A-008E-41B8-9A75-4FCD58D3C4C4",
        "questionText":  "You are analyzing communication on a CAN bus to intercept and manipulate messages between an engine control unit (ECU) and a vehicle\u0026rsquo;s components. Which type of attack does this describe?",
        "explanation":  "CAN bus attacks target the Controller Area Network (CAN) bus, a communication system used in vehicles to connect components such as the engine control unit (ECU), brakes, and infotainment systems. These attacks may involve intercepting and altering messages to manipulate vehicle behavior, such as disabling brakes or spoofing sensor data. Plaintext attacks focus on exploiting unencrypted communication protocols to intercept sensitive information but are unrelated to CAN bus systems. Bluejacking involves sending unsolicited messages to Bluetooth-enabled devices, often for nuisance purposes, and does not pertain to vehicle communications. RFID attacks target systems using RFID technology, such as access control systems or inventory tracking, and do not apply to CAN bus communication.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "CAN bus attack",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Plaintext attack",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Bluejacking",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Radio-frequency identification (RFID) attack",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "E20CDE73-8F55-4521-A66C-4BDA47D81982",
        "questionText":  "A scan identifies a vulnerability with the CVE identifier CVE-2023-12345. What information does this provide?",
        "explanation":  "CVE identifiers reference publicly documented vulnerabilities in the CVE database, providing standard identifiers for tracking and managing vulnerabilities. Exploitation details and likelihood require additional resources like EPSS or vulnerability reports. The software version affected is often included in CVE details but not inherent to the identifier itself.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "A detailed explanation of how to exploit the vulnerability",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "A reference to a publicly documented vulnerability",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "The likelihood of the vulnerability being exploited",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "The software version affected by the vulnerability",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "663A6593-6C5E-4CC7-B7CC-452359FFC5DB",
        "questionText":  "During a penetration test, you need to exploit a service running with misconfigured access settings. Which tool would be most effective for this task?",
        "explanation":  "Metasploit is a framework designed for exploiting vulnerabilities, including misconfigured services, by leveraging prebuilt or custom exploit modules. Wireshark captures and analyzes network traffic but is not designed for exploitation. Nmap identifies vulnerabilities and services but does not perform exploitation directly. Responder is used for on-path attacks and credential harvesting, not general exploitation.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Metasploit",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Wireshark",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Nmap",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Responder",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "EB097436-590D-4488-82E6-45D0ED2D9369",
        "questionText":  "During a cloud assessment, you find evidence of trust relationships between accounts being exploited to access sensitive data. Which attack type does this represent?",
        "explanation":  "Trust relationship abuse occurs when attackers exploit overly permissive or misconfigured trust relationships between cloud accounts, roles, or services to gain unauthorized access to sensitive resources. For example, attackers might use improperly configured IAM roles to pivot between accounts and access confidential data. Supply chain attacks focus on vulnerabilities in third-party software or services that integrate with the target environment but do not directly involve trust relationships. Logging information exposure involves sensitive data unintentionally stored or shared in logs, which is a separate issue from trust configurations. Container escape refers to exploiting container vulnerabilities to access the host system, which is unrelated to cloud trust relationships.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Trust relationship abuse",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Supply chain attack",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Logging information exposure",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Container escape",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "2E14F080-0703-480B-BF82-481485115E2F",
        "questionText":  "During an IoT assessment, you target an industrial control system (ICS) using the Modbus protocol to alter protocol values. Which type of attack does this represent?",
        "explanation":  "Register manipulation involves altering Modbus protocol register values, which can disrupt or control industrial control system (ICS) devices, making it a direct attack on the system\u0026#39;s functionality. Replay attacks involve retransmitting intercepted communication to reproduce actions, but they do not alter register values. Plaintext attacks exploit protocols that lack encryption, focusing on data interception or analysis rather than directly modifying values. Model manipulation is specific to machine learning systems and aims to influence outcomes, making it unrelated to Modbus or ICS environments.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Register manipulation",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Replay attack",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Plaintext attack",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Model manipulation",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "ECDC77C0-275F-43AC-AE15-3F95E8BA1362",
        "questionText":  "During an engagement, you use a breach and attack simulation (BAS) tool to replicate adversary behavior in a controlled environment. Which tool would best suit this scenario?",
        "explanation":  "Caldera is a breach and attack simulation (BAS) platform designed to mimic adversary behavior, allowing security teams to evaluate and strengthen their defenses in a controlled environment. PowerSploit is a PowerShell exploitation framework used for post-exploitation tasks but is not a BAS tool. PowerView is a specialized tool for Active Directory enumeration and privilege escalation, unrelated to simulating adversary behavior. Bash scripting is a general-purpose scripting language used to automate tasks but lacks the specific capabilities needed for breach and attack simulation.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Caldera",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "PowerSploit",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "PowerView",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Bash scripting",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "F88223C3-46FF-4799-B44F-30D036378F9D",
        "questionText":  "While performing a penetration test, you discover a system that is vulnerable due to shared directories with lax permissions. Which type of attack should you attempt to identify sensitive files?",
        "explanation":  "Share enumeration involves locating and analyzing shared directories or resources with improper permissions to identify sensitive data, such as configuration files, credentials, or business-critical information. For example, open shares with \u0026quot;Everyone\u0026quot; access permissions can allow unauthorized access to sensitive files. Multihomed host exploitation targets devices with multiple network interfaces to bridge or gain access to isolated networks, which is unrelated to directory permissions. VLAN hopping is a technique to bypass VLAN segmentation, often used to access restricted network segments but not relevant to shared resources. Packet crafting creates custom network packets for attacks like spoofing or evasion but does not assist in identifying shared files.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Share enumeration",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Multihomed host exploitation",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "VLAN hopping",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Packet crafting",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "C8FC3F86-40D2-48E8-877F-029A5EFBC4CD",
        "questionText":  "During a security assessment, you identify a mobile application that requests excessive locations unrelated to its functionality. Which type of attack does this indicate?",
        "explanation":  "Permission abuse occurs when a mobile application requests more permissions than necessary, potentially allowing unauthorized access to sensitive data or system resources. Jailbreak/rooting removes device restrictions for full administrative control. Information disclosure involves unintended exposure of sensitive information. Replay attacks resend captured data to execute unauthorized actions.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Permission abuse",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Jailbreak/rooting",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Information disclosure",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Replay attack",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "7D2AB106-8435-4422-A4FE-11DF26C9A17E",
        "questionText":  "While testing a machine learning system, you send crafted inputs to manipulate the model\u0026#39;s decision-making process. Which type of attack are you performing?",
        "explanation":  "Model manipulation modifies or influences the decision-making process of a machine learning system by introducing crafted inputs. Prompt injection manipulates the model\u0026rsquo;s responses by altering text-based inputs. Replay attacks resend intercepted communication to recreate actions. Bluetooth spamming sends unsolicited messages to nearby Bluetooth-enabled devices.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Model manipulation",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Prompt injection",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Replay attack",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Bluetooth spamming",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "FA90C0E6-FAF4-4919-A095-0FBECD05B597",
        "questionText":  "During a penetration test, you use a Python script to extract and replay SMB authentication requests captured from the network. Which tool would you use to perform this task?",
        "explanation":  "Impacket is a Python library that supports various network protocol operations, including crafting and replaying SMB authentication requests, enabling attackers to test or exploit SMB-based authentication mechanisms. For example, Impacket can execute relay attacks or extract hashes from SMB traffic for further exploitation. Scapy is a versatile packet manipulation tool used for crafting and analyzing network traffic but is not specialized for SMB authentication replay. Infection Monkey is a breach and attack simulation (BAS) tool designed to test network resiliency, but it does not focus on SMB-specific tasks. Caldera is another BAS framework that automates adversary emulation but lacks the specific SMB functionalities provided by Impacket.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Impacket",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Scapy",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Infection Monkey",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Caldera",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "6924C70C-0FC5-421B-8F46-1F29D92BF5C9",
        "questionText":  "During a wireless assessment, you drive through a neighborhood using a tool to detect and map Wi-Fi networks. Which type of attack are you performing?",
        "explanation":  "Wardriving involves using a device and software to locate and map wireless networks while in motion, typically for reconnaissance. Evil twin attacks create a rogue access point to intercept user traffic. Signal jamming disrupts Wi-Fi signals to prevent network connectivity. Deauthentication forces clients to disconnect from access points.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Wardriving",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Evil twin attack",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Signal jamming",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Deauthentication",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "F56B5CD2-E607-4398-BD86-205CAB034AE6",
        "questionText":  "While testing an AWS environment, you suspect a metadata service attack could reveal sensitive instance data. Which tool would you use to test for this vulnerability?",
        "explanation":  "Pacu is a cloud exploitation framework designed for testing vulnerabilities in AWS environments, including metadata service attacks, where attackers exploit misconfigurations to retrieve sensitive instance metadata like access keys or tokens. For example, Pacu can help validate whether an attacker can access the AWS instance metadata service at http://169.254.169.254. ScoutSuite is a multi-cloud auditing tool that identifies misconfigurations but is more focused on general security posture and compliance rather than specific metadata attacks. Kube-hunter is a Kubernetes security tool designed to identify vulnerabilities in Kubernetes clusters, not AWS environments. Docker Bench evaluates Docker container security configurations and does not address AWS metadata services.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Pacu",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "ScoutSuite",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Kube-hunter",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Docker Bench",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "8037FB2D-7C51-47DE-9363-226FA0D9F927",
        "questionText":  "While testing a wireless network, you set up a rogue access point with the same SSID as a legitimate network to trick users into connecting. Which attack type is this?",
        "explanation":  "Evil twin attacks create a rogue access point with the same SSID as a legitimate network, luring users to connect and potentially exposing sensitive data. Captive portal attacks target web-based login systems. Protocol fuzzing sends malformed packets to test the robustness of protocols. Deauthentication disrupts client connections to legitimate access points.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Evil twin attack",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Captive portal attack",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Protocol fuzzing",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Deauthentication",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "1E4CC2A9-2561-426B-8E8A-23B90FB832CA",
        "questionText":  "You are tasked with conducting a VLAN hopping attack to test segmentation security. What is the goal of this attack?",
        "explanation":  "VLAN hopping aims to bypass VLAN segmentation and gain unauthorized access to resources on a different VLAN. Share enumeration identifies shared resources on a network. Relay attacks involve intercepting and forwarding credentials. Multihomed hosts have multiple network interfaces that can connect to different networks but are unrelated to VLAN hopping.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Gain unauthorized access to a different VLAN",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Enumerate shared network resources",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Relay credentials between two hosts",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Exploit a multihomed host to access multiple networks",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "A526B810-1280-44BB-B1AE-23CF8EE82ACE",
        "questionText":  "During a network attack, you use Responder to intercept and manipulate authentication requests on a local network. Which type of attack does this represent?",
        "explanation":  "Responder is a tool designed for facilitating on-path attacks (also known as man-in-the-middle attacks) by intercepting and manipulating authentication traffic, such as NTLM hashes, on a local network. For example, Responder can poison NetBIOS or LLMNR traffic to trick systems into sending authentication requests to the attacker\u0026#39;s machine. Default credentials attacks exploit accounts left with factory-set usernames and passwords, which is unrelated to traffic interception. Relay attacks involve intercepting authentication traffic and forwarding it to a legitimate system to authenticate without decrypting the credentials, a separate tactic that may also use tools like Responder. Certificate services attacks exploit vulnerabilities in the certificate issuance or management process, which is unrelated to authentication request interception.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "On-path attack",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Default credentials attack",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Relay attack",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Certificate services attack",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "12E852CD-84CC-4607-9606-2CD6D2C9B078",
        "questionText":  "During a cloud security assessment, you identify an exposed S3 bucket containing sensitive company data. Which type of attack does this scenario represent?",
        "explanation":  "Exposed storage buckets, such as Amazon S3 buckets, represent resource misconfigurations that can lead to unauthorized access to sensitive data. Trust relationship abuse exploits relationships between cloud services or accounts. Metadata service attacks target cloud metadata endpoints. Container escape exploits vulnerabilities in containerized environments to gain access to the underlying host.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Resource misconfiguration",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Trust relationship abuse",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Metadata service attack",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Container escape",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "6954846D-79DF-44D0-9D75-0A4B2EA0D395",
        "questionText":  "During a penetration test, you configure a method to ensure continued administrative access to a compromised system. This involves modifying the system to include an additional entity with elevated privileges. Which persistence method are you using?",
        "explanation":  "Adding new accounts involves creating an additional user or entity with elevated privileges to ensure persistent access to the compromised system. Backdoors are hidden mechanisms for unauthorized access but do not involve creating new accounts. Tampering security controls involves altering or disabling defensive measures like firewalls or antivirus, rather than adding privileged entities. Service creation sets up persistent system processes for later access but does not involve user account management.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Add new accounts",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Backdoor",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Tampering security controls",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Service creation",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "7728D6A7-D0C9-4C5D-B396-17C285DDFE8D",
        "questionText":  "During a post-exploitation phase, you upload a script to a compromised web server that allows you to execute commands remotely via HTTP requests. What type of backdoor is this?",
        "explanation":  "A web shell is a malicious script uploaded to a web server, providing attackers with remote access to execute commands, manage files, or manipulate the system through HTTP requests. For example, web shells are commonly used in attacks on vulnerable web applications to maintain persistent access to compromised servers. A Trojan is a type of malware disguised as a legitimate application, often used to deliver additional payloads or create backdoors, but it does not specifically involve HTTP-based remote command execution. A rootkit is a collection of malicious tools designed to hide the presence of malware or attackers on a system, often operating at the kernel level to conceal processes, files, or network activity. A reverse shell connects the compromised machine back to the attacker\u0026rsquo;s system, providing control over the target, but it operates differently from a web shell as it is not executed via HTTP requests.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Web shell",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Trojan",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Rootkit",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Reverse shell",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "204C6239-762D-41EF-A848-459E3EEB46A8",
        "questionText":  "You exfiltrate sensitive data by encrypting files, compressing them into smaller archives, and uploading them to a cloud storage service. What combination of techniques are you employing?",
        "explanation":  "File encryption and compression protect sensitive data during transmission by ensuring its confidentiality and reducing its size for efficient transfer. Uploading the data to a cloud storage service provides an easily accessible and scalable exfiltration pathway that is often less monitored than traditional data transfer methods. Alternate data streams (ADS) involve hiding data within the file system but do not relate to cloud storage or file compression. DNS covert channels encode data into DNS queries to exfiltrate it covertly, which is a separate technique. Virtual drive mounting provides a local storage mechanism, while email could be used for data transfer but is not involved in this scenario.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "File encryption and compression, cloud storage",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Alternate data streams, covert channel",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "DNS covert channel, steganography",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Virtual drive mounting, email",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "B60272BC-5451-4ED1-81D2-5B51F65F4C41",
        "questionText":  "While assessing a compromised system, you use text storage sites like pastebin to exfiltrate sensitive information. Why is this technique effective?",
        "explanation":  "Text storage sites like pastebin are widely accessible public platforms that are frequently overlooked by traditional monitoring tools, allowing attackers to exfiltrate sensitive data in plain sight. These sites also support large text payloads, making them ideal for sharing stolen credentials, configuration files, or other data. Hiding data within system files involves using alternate data streams (ADS) to conceal information on the host for later retrieval, which is unrelated to online text storage. File encryption and compression secure data for transport but do not inherently involve public platforms like pastebin. Using DNS queries for covert data transfer involves encoding data into DNS traffic, a completely separate exfiltration method that is not applicable to this scenario.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "It leverages public, often unmonitored, platforms to transmit data.",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "It hides data within system files for later retrieval.",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "It encrypts and compresses files before sending them.",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "It uses DNS queries to transfer data covertly.",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "D17A1719-5508-4EC2-8C10-6C82EF0F8DC1",
        "questionText":  "While analyzing network traffic, you identify systems communicating using port 3389. What should you investigate to identify potential lateral movement opportunities?",
        "explanation":  "Remote Desktop Protocol (RDP) uses port 3389,\u0026nbsp; RDP access points are a common target for lateral movement because they allow attackers to remotely control systems within the network. Investigating exposed or misconfigured RDP endpoints can reveal opportunities for unauthorized access, especially if weak credentials or vulnerabilities are present. Web interfaces are used for managing applications or services but are not related to RDP or port 3389 communication. FTP uses ports 20/21, FTP credentials may enable access to file transfer services but do not facilitate lateral movement via remote desktop. Server Message Block (SMB) shares operate on port 445 and are used for file sharing and data transfer between systems but do not provide remote desktop capabilities.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Remote Desktop Protocol (RDP) access points",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Web interfaces",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "File Transfer Protocol (FTP) credentials",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Server Message Block (SMB) shares",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "2C6FB5DA-727B-4415-9C2A-6797D99EED7E",
        "questionText":  "During cleanup, you ensure that a virtual environment used for staging attacks is terminated and all associated resources are decommissioned. What activity does this represent?",
        "explanation":  "Spinning down infrastructure involves terminating virtual environments, decommissioning cloud resources, and ensuring no staging components remain. Reverting configuration changes restores altered system settings. Preserving artifacts involves saving evidence of the test for documentation. Removing tester-created credentials ensures accounts or access methods added during the test are eliminated.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Spin down infrastructure",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Revert configuration changes",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Preserve artifacts",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Remove tester-created credentials",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "FF0EE6D0-CB09-4A35-9532-679F99345CC2",
        "questionText":  "During a penetration test cleanup, you identify and remove registry keys that were modified to maintain access. Which activity does this represent?",
        "explanation":  "Removing persistence mechanisms involves eliminating changes made to maintain access, such as modified registry keys, scheduled tasks, or services. Reverting configuration changes restores altered system settings. Secure data destruction ensures sensitive data is irrecoverably deleted. Removing tester-created credentials refers to deleting accounts or credentials added during the test.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Remove persistence mechanisms",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Revert configuration changes",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Secure data destruction",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Remove tester-created credentials",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "D1DE7C24-7455-40E3-88EB-61AF852C5AC5",
        "questionText":  "You discover a web application that allows file uploads and decide to exfiltrate data by embedding sensitive information in unused sections of an image file. What exfiltration technique are you using?",
        "explanation":  "Steganography hides sensitive data within another file, such as embedding it into unused sections of an image, making it less likely to be detected during exfiltration. Text storage sites involve uploading data to online pastebin-style services. File encryption and compression secure data but do not inherently hide it. Alternate data streams store additional information in NTFS file attributes.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Steganography",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Text storage sites",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "File encryption and compression",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Alternate data streams",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "541ACB65-FE7E-4AFC-BCC5-5F4082559014",
        "questionText":  "During a penetration test, you replace a legitimate system file with a malicious version that hides itself and your activity. What type of persistence mechanism is this?",
        "explanation":  "A rootkit is a sophisticated persistence mechanism that replaces or modifies legitimate system files to conceal malicious activity and maintain stealthy access to the compromised system. For example, attackers might replace core system binaries to hide their processes or files from detection tools. A bind shell sets up a listening port on the target machine for the attacker to connect to, enabling remote control, but it does not involve modifying system files. A Trojan is malicious software disguised as legitimate, often used to deliver payloads or create backdoors but does not typically replace system files. Browser extensions can provide a persistence mechanism by embedding malicious code into the browser environment, but they operate in a different context and do not involve overwriting system files.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Rootkit",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Bind shell",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Trojan",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Browser extension",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "19EEB699-8D2F-4809-BBE1-5F584FD60575",
        "questionText":  "During an engagement, you need to exfiltrate data by embedding it within an image file to avoid detection. Which technique are you using?",
        "explanation":  "Steganography hides data within another file, such as an image, to avoid detection during exfiltration. DNS covert channels use DNS requests to transmit data. Alternate data streams store additional metadata in NTFS files. Virtual drive mounting provides access to additional storage but does not inherently hide data.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Steganography",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "DNS covert channel",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Alternate data streams",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Virtual drive mounting",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "0C330B33-7D95-4D61-BDAA-70F3C34A67F8",
        "questionText":  "During cleanup, you restore altered firewall rules and system settings to their original state. Which activity does this describe?",
        "explanation":  "Reverting configuration changes involves restoring modified system settings, firewall rules, or other configurations to their original state, ensuring the environment returns to its pre-test condition. This is a critical step to avoid leaving the system in a potentially vulnerable or altered state after testing. Removing persistence mechanisms focuses on eliminating backdoors, registry keys, or other methods used to maintain unauthorized access. Spinning down infrastructure involves decommissioning temporary resources such as virtual machines or cloud services utilized during the engagement. Preserving artifacts refers to securely retaining evidence such as logs, reports, or system snapshots for post-test analysis or legal purposes.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Revert configuration changes",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Remove persistence mechanisms",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Spin down infrastructure",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Preserve artifacts",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "52F68AAE-F541-4527-84E4-7C0729A8026E",
        "questionText":  "During a penetration test, you compromise a machine and set up a relay to forward authentication traffic between two systems. What lateral movement technique are you using?",
        "explanation":  "Relay creation allows attackers to intercept and forward authentication traffic between systems, enabling lateral movement without direct access to valid credentials. Pivoting uses a compromised system as a foothold to access other network segments. Enumeration involves gathering information about services or credentials. Credential dumping extracts stored credentials from a compromised system.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Relay creation",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Pivoting",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Enumeration",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Credential dumping",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "F248CD8F-172F-4761-9310-7E30C9E1EF85",
        "questionText":  "During a penetration test, you use alternate data streams to store sensitive information in a hidden section of an NTFS file. What makes this method effective for exfiltration?",
        "explanation":  "Alternate data streams (ADS) in NTFS allow attackers to hide data within the file system by storing it in a hidden section of an existing file, making it invisible to standard file management tools. This technique is effective for concealing sensitive information during exfiltration. Encryption and compression enhance data security and reduce file size but do not inherently hide the data within the file system. Steganography embeds data into images, audio, or video files to evade detection through obfuscation, which is unrelated to ADS. DNS covert channels use DNS queries to exfiltrate data discreetly over the network, which differs from embedding data in NTFS file streams.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "It conceals data within existing files, making it harder to detect.",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "It encrypts and compresses the data for secure transmission.",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "It embeds data in image files to evade detection.",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "It leverages DNS queries to transmit the data covertly.",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "35FFEF33-FBA2-4BF8-991C-9A840A8C0964",
        "questionText":  "While assessing a compromised system, you use PsExec to execute commands on another machine within the network. What lateral movement method are you employing?",
        "explanation":  "Pivoting involves using a compromised system as a foothold to access and execute commands on other systems within the network. Service discovery identifies available network services. Command execution refers to running commands but is broader than pivoting. Credential dumping focuses on extracting stored authentication data.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Pivoting",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Service discovery",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Command execution",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Credential dumping",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "D4CAC31D-93BE-4995-84C1-918F54607F7E",
        "questionText":  "A pentester is attempting to exfiltrate data by sending encoded payloads through DNS queries. What technique are you employing?",
        "explanation":  "A DNS covert channel uses DNS queries to hide and transmit data, evading detection by security systems. ICMP covert channels send data via ICMP packets. Text storage sites involve uploading sensitive data to pastebin-style services. File encryption and compression protect data integrity but do not inherently exfiltrate it.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "DNS covert channel",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "ICMP covert channel",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Text storage sites",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "File encryption and compression",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "1064E79F-9F65-4524-925F-A4D5F2CA1707",
        "questionText":  "During post-exploitation, you configure a compromised machine to initiate an outbound connection to your system, allowing you to execute commands remotely. What type of mechanism does this describe?",
        "explanation":  "A reverse shell establishes an outbound connection from the compromised target back to the attacker\u0026#39;s system, enabling remote command execution. A bind shell opens a port on the target system, allowing the attacker to connect inbound. A web shell is a script uploaded to a server, granting control via a web interface. A Trojan conceals malicious behavior within legitimate software to facilitate compromise.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Reverse shell",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Bind shell",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Web shell",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Trojan",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "896291B0-E816-46B3-83B8-A59B7D4C14D3",
        "questionText":  "After completing a penetration test, you delete all credentials created during the engagement to prevent unauthorized access. Which cleanup activity does this represent?",
        "explanation":  "Removing tester-created credentials ensures that any accounts or access methods created during the penetration test are deleted to prevent unauthorized access after the engagement. Removing tools involves deleting scripts and utilities used during testing but does not address credentials. Reverting configuration changes restores any altered system settings to their original state. Secure data destruction focuses on irrecoverably deleting sensitive data but does not involve removing created credentials.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Remove tester-created credentials",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Remove tools",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Revert configuration changes",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Secure data destruction",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "2AB5DD0C-21B9-46BF-BD42-A1F7F085BA2A",
        "questionText":  "You use Proxychains to route your traffic through a compromised system to access a restricted network segment. What technique are you utilizing?",
        "explanation":  "Pivoting is a technique where attackers use a compromised system as a gateway to access other systems or network segments that would otherwise be inaccessible. For example, tools like Proxychains allow attackers to route traffic through the compromised system to bypass segmentation and access restricted resources. Relay creation involves forwarding intercepted authentication traffic (e.g., credentials) to another system but does not involve routing general traffic. Enumeration refers to collecting information such as user accounts, services, or shares on a network, which is often a precursor to pivoting. Service discovery identifies active services on a network but does not facilitate traffic routing or accessing restricted segments.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Pivoting",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Relay creation",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Enumeration",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Service discovery",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "A9E3BECB-E343-4783-B02C-A91AB80C4EFA",
        "questionText":  "After concluding a penetration test, you securely wipe all sensitive test data and logs to prevent recovery. What activity are you performing?",
        "explanation":  "Secure data destruction ensures that sensitive data and logs generated during a penetration test are irreversibly deleted, preventing their recovery and minimizing the risk of exposure to unauthorized parties. This process often involves overwriting data multiple times or using specialized tools to meet compliance standards. Removing tools refers to deleting scripts, binaries, or utilities used during the test to avoid leaving any traces of the testing process. Removing tester-created credentials eliminates temporary accounts or access methods established during the engagement. Reverting configuration changes involves restoring system and application settings to their original state to ensure normal operations post-test.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Secure data destruction",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Remove tools",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Remove tester-created credentials",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Revert configuration changes",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "E22A7CA2-285E-4597-BDFA-B7BB9E67A7D4",
        "questionText":  "During a post-exploitation phase, you configure a Windows system to execute a custom script every time the system boots. Which persistence method are you using?",
        "explanation":  "Scheduled tasks are used to automate script or program execution at specific times or system events, such as system startup, ensuring persistence. Service creation involves configuring persistent services that run with elevated privileges. Registry keys can be modified to execute malicious code during system events. Backdoors provide unauthorized remote access to compromised systems.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Scheduled tasks",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Service creation",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Registry keys",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Backdoor",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "0B3B50F3-5C2F-42D8-B83F-C3093E53451C",
        "questionText":  "During a penetration test, you use Mimikatz to extract hashed credentials from the memory of a compromised system. What lateral movement method does this facilitate?",
        "explanation":  "Credential dumping is the process of extracting hashed or plaintext credentials from a compromised system\u0026#39;s memory or storage, often using tools like Mimikatz. These credentials can then be used for lateral movement, such as authenticating to other systems within the network. Service discovery involves identifying active services on systems to locate potential targets for exploitation, which is a separate reconnaissance activity. Pivoting uses a compromised system as a foothold to access additional network resources or systems, enabling further lateral movement. Relay creation forwards intercepted authentication traffic (e.g., hashes) to authenticate with target systems without needing plaintext credentials, but it differs from directly extracting credentials via tools like Mimikatz.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Credential dumping",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Service discovery",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Pivoting",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Relay creation",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "4258E346-F7B5-4D07-9C33-CB7069E4A70E",
        "questionText":  "After compromising a system, you modify HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run to ensure your malware runs every time the user logs in. What persistence method are you using?",
        "explanation":  "Modifying registry keys is a common persistence method that ensures malicious code executes automatically during specific system events, such as user login or system startup. For example, attackers may alter keys in the \u0026ldquo;HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\u0026rdquo; path to add their malware for automatic execution. Scheduled tasks involve creating tasks that execute at predefined times or intervals, which differs from event-triggered registry key modifications. Service creation establishes persistent services that automatically start malicious programs during system boot or service activation. Backdoors are mechanisms that provide attackers with unauthorized remote access to the system, which is a broader category and does not necessarily involve modifying the registry.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Registry keys",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Scheduled tasks",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Service creation",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Backdoor",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "6EE8D15B-F8E4-4188-8988-E88B6901EBBC",
        "questionText":  "After completing a penetration test, you delete all temporary scripts, tools, and payloads used during the engagement. Which cleanup activity does this describe?",
        "explanation":  "Removing tools involves deleting scripts, payloads, and utilities used during the penetration test to prevent detection or reuse, ensuring the environment is restored to its original state. Spinning down infrastructure refers to decommissioning resources like virtual machines. Removing persistence mechanisms focuses on eliminating backdoors or unauthorized access methods. Secure data destruction ensures sensitive data is irrecoverably deleted but does not pertain to removing tools used during testing.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Remove tools",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Spin down infrastructure",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Remove persistence mechanisms",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Secure data destruction",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "D28F7825-A91C-4CAF-B60D-E3B40BC1B2F3",
        "questionText":  "To exfiltrate large amounts of data during a penetration test, you ZIP the files before sending them over HTTPS. Which staging and exfiltration techniques are you combining?",
        "explanation":  "Using a zipped file or .zip, compresses the data to reduce the size, while the HTTPS covert channel hides the transmission within encrypted web traffic. These combine file encryption and compression to ensure the data remains secure and manageable in size. Steganography embeds data within files, not HTTPS. DNS covert channels use DNS requests, and cloud storage involves uploading data to external storage services.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "File encryption and compression, HTTPS covert channel",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Steganography, alternate data streams",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "DNS covert channel, file encryption",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Cloud storage, text storage sites",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "17A3A227-4947-4257-A384-DA5AC912E823",
        "questionText":  "You are attempting to discover shared files on a networked Windows system to identify potential lateral movement paths. Which protocol would you most likely enumerate?",
        "explanation":  "Server Message Block (SMB) is commonly used to share files and printers on Windows systems, making it a key protocol for lateral movement. Secure Shell (SSH) facilitates encrypted remote access. File Transfer Protocol (FTP) transfers files but is not typically used for network-wide file sharing. Remote Procedure Call (RPC) allows processes to communicate but does not directly enumerate shared files.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Server Message Block (SMB)",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Secure Shell (SSH)",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "File Transfer Protocol (FTP)",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Remote Procedure Call (RPC)",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "FD1ACBFB-6A74-4C13-A898-F8E2F4E10FAA",
        "questionText":  "During a penetration test, you retain logs and artifacts as evidence of your activities for final reporting. What activity does this represent?",
        "explanation":  "Preserving artifacts involves retaining logs, screenshots, test data, and other evidence collected during a penetration test to ensure proper documentation, analysis, and reporting. This step is critical for providing stakeholders with detailed results and ensuring accountability. Removing tools involves deleting the scripts, binaries, or utilities used during the engagement to clean up the environment. Secure data destruction focuses on irreversibly deleting sensitive data to prevent recovery. Spinning down infrastructure refers to decommissioning temporary resources, such as virtual machines or cloud services, used during the test.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Preserve artifacts",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Remove tools",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Secure data destruction",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Spin down infrastructure",
                                  "IsCorrect":  false
                              }
                          ]
    },
    {
        "questionId":  "02232268-13DE-4422-85AB-F57D3E70F6EE",
        "questionText":  "During a penetration test, you discover a method to store and exfiltrate sensitive information by embedding it in a hidden location on the target system. You achieve this by leveraging a mechanism that allows the creation or use of a virtual environment for storage, making detection by traditional file analysis more difficult. What technique does this represent?",
        "explanation":  "Virtual drive mounting involves creating or using a virtual drive on the target system to store sensitive information, which can be concealed and later exfiltrated without drawing attention during standard file system checks. Alternate data streams leverage NTFS file attributes to hide information within files, making it invisible to typical directory listings. Covert channel over ICMP involves embedding exfiltrated data within ICMP packets to bypass traditional network monitoring. Cloud storage refers to uploading sensitive information to remote storage services for later access, but it is not a hidden local storage mechanism.",
        "difficulty":  "1",
        "comments":  "",
        "exhibits":  [

                     ],
        "answerType":  "MC",
        "answerChoices":  [
                              {
                                  "Text":  "Virtual drive mounting",
                                  "IsCorrect":  true
                              },
                              {
                                  "Text":  "Alternate data streams",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Covert channel over ICMP",
                                  "IsCorrect":  false
                              },
                              {
                                  "Text":  "Cloud storage",
                                  "IsCorrect":  false
                              }
                          ]
    }
]
